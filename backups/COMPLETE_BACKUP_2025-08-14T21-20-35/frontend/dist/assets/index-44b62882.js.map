{"version":3,"file":"index-44b62882.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../node_modules/react-query/es/core/subscribable.js","../../node_modules/react-query/es/core/utils.js","../../node_modules/react-query/es/core/focusManager.js","../../node_modules/react-query/es/core/onlineManager.js","../../node_modules/react-query/es/core/retryer.js","../../node_modules/react-query/es/core/notifyManager.js","../../node_modules/react-query/es/core/logger.js","../../node_modules/react-query/es/core/query.js","../../node_modules/react-query/es/core/queryCache.js","../../node_modules/react-query/es/core/mutation.js","../../node_modules/react-query/es/core/mutationCache.js","../../node_modules/react-query/es/core/infiniteQueryBehavior.js","../../node_modules/react-query/es/core/queryClient.js","../../node_modules/react-query/es/core/queryObserver.js","../../node_modules/react-query/es/react/reactBatchedUpdates.js","../../node_modules/react-query/es/react/setBatchUpdatesFn.js","../../node_modules/react-query/es/react/logger.js","../../node_modules/react-query/es/react/setLogger.js","../../node_modules/react-query/es/react/QueryClientProvider.js","../../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../../node_modules/react-query/es/react/utils.js","../../node_modules/react-query/es/react/useBaseQuery.js","../../node_modules/react-query/es/react/useQuery.js","../../src/context/ThemeContext.jsx","../../node_modules/lucide-react/dist/esm/defaultAttributes.mjs","../../node_modules/lucide-react/dist/esm/createLucideIcon.mjs","../../node_modules/lucide-react/dist/esm/icons/activity.mjs","../../node_modules/lucide-react/dist/esm/icons/alert-circle.mjs","../../node_modules/lucide-react/dist/esm/icons/arrow-right.mjs","../../node_modules/lucide-react/dist/esm/icons/award.mjs","../../node_modules/lucide-react/dist/esm/icons/bar-chart-3.mjs","../../node_modules/lucide-react/dist/esm/icons/book-open.mjs","../../node_modules/lucide-react/dist/esm/icons/building-2.mjs","../../node_modules/lucide-react/dist/esm/icons/calendar.mjs","../../node_modules/lucide-react/dist/esm/icons/database.mjs","../../node_modules/lucide-react/dist/esm/icons/eye.mjs","../../node_modules/lucide-react/dist/esm/icons/filter.mjs","../../node_modules/lucide-react/dist/esm/icons/graduation-cap.mjs","../../node_modules/lucide-react/dist/esm/icons/hash.mjs","../../node_modules/lucide-react/dist/esm/icons/heart.mjs","../../node_modules/lucide-react/dist/esm/icons/home.mjs","../../node_modules/lucide-react/dist/esm/icons/loader-2.mjs","../../node_modules/lucide-react/dist/esm/icons/map-pin.mjs","../../node_modules/lucide-react/dist/esm/icons/menu.mjs","../../node_modules/lucide-react/dist/esm/icons/moon.mjs","../../node_modules/lucide-react/dist/esm/icons/search.mjs","../../node_modules/lucide-react/dist/esm/icons/star.mjs","../../node_modules/lucide-react/dist/esm/icons/stethoscope.mjs","../../node_modules/lucide-react/dist/esm/icons/sun.mjs","../../node_modules/lucide-react/dist/esm/icons/target.mjs","../../node_modules/lucide-react/dist/esm/icons/trending-up.mjs","../../node_modules/lucide-react/dist/esm/icons/users.mjs","../../node_modules/lucide-react/dist/esm/icons/x.mjs","../../src/components/layout/Layout.jsx","../../src/pages/Dashboard.jsx","../../src/pages/Colleges.jsx","../../src/pages/Analytics.jsx","../../src/pages/MedicalSeats.jsx","../../src/pages/CounsellingData.jsx","../../src/pages/CutoffRanks.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * @remix-run/router v1.23.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Remove any lingering deleted fetchers that have already been removed\n    // from state.fetchers\n    deletedFetchers.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        deletedFetchersKeys.push(key);\n      }\n    });\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    } else {\n      // We already called deleteFetcher() on these, can remove them from this\n      // Set now that we've handed the keys off to the data layer\n      deletedFetchersKeys.forEach(key => deletedFetchers.delete(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts != null && opts.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    // If this fetcher was previously marked for deletion, unmark it since we\n    // have a new instance\n    if (deletedFetchers.has(key)) {\n      deletedFetchers.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    // If we opted into the flag we can clear this now since we're calling\n    // deleteFetcher() at the end of updateState() and we've already handed the\n    // deleted fetcher keys off to the data layer.\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\n    // Set populated until the next updateState call, and we'll clear\n    // `deletedFetchers` then\n    if (future.v7_fetcherPersist) {\n      deletedFetchers.delete(key);\n    }\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      deletedFetchers.add(key);\n      if (!future.v7_fetcherPersist) {\n        deleteFetcher(key);\n      }\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init3, _result$init4;\n      if (result.data instanceof Error) {\n        var _result$init, _result$init2;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n          headers: (_result$init2 = result.init) != null && _result$init2.headers ? new Headers(result.init.headers) : undefined\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(((_result$init3 = result.init) == null ? void 0 : _result$init3.status) || 500, undefined, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n        headers: (_result$init4 = result.init) != null && _result$init4.headers ? new Headers(result.init.headers) : undefined\n      };\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: ((_result$init6 = result.init) == null ? void 0 : _result$init6.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init7, _result$init8;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init7 = result.init) == null ? void 0 : _result$init7.status,\n      headers: (_result$init8 = result.init) != null && _result$init8.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned$1 = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned$1[key]) {\n    alreadyWarned$1[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\nconst alreadyWarned = {};\nfunction warnOnce(key, message) {\n  if (process.env.NODE_ENV !== \"production\" && !alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\n  if ((renderFuture == null ? void 0 : renderFuture.v7_startTransition) === undefined) {\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\n  }\n  if ((renderFuture == null ? void 0 : renderFuture.v7_relativeSplatPath) === undefined && (!routerFuture || routerFuture.v7_relativeSplatPath === undefined)) {\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\n  }\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\n    }\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\n    }\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\n    }\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\n    }\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_logV6DeprecationWarnings, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit, useViewTransitionState };\n//# sourceMappingURL=index.js.map\n","export var Subscribable = /*#__PURE__*/function () {\n  function Subscribable() {\n    this.listeners = [];\n  }\n\n  var _proto = Subscribable.prototype;\n\n  _proto.subscribe = function subscribe(listener) {\n    var _this = this;\n\n    var callback = listener || function () {\n      return undefined;\n    };\n\n    this.listeners.push(callback);\n    this.onSubscribe();\n    return function () {\n      _this.listeners = _this.listeners.filter(function (x) {\n        return x !== callback;\n      });\n\n      _this.onUnsubscribe();\n    };\n  };\n\n  _proto.hasListeners = function hasListeners() {\n    return this.listeners.length > 0;\n  };\n\n  _proto.onSubscribe = function onSubscribe() {// Do nothing\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {// Do nothing\n  };\n\n  return Subscribable;\n}();","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// TYPES\n// UTILS\nexport var isServer = typeof window === 'undefined';\nexport function noop() {\n  return undefined;\n}\nexport function functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nexport function isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nexport function ensureQueryKeyArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nexport function difference(array1, array2) {\n  return array1.filter(function (x) {\n    return array2.indexOf(x) === -1;\n  });\n}\nexport function replaceAt(array, index, value) {\n  var copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nexport function timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nexport function parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return _extends({}, arg3, {\n      queryKey: arg1,\n      queryFn: arg2\n    });\n  }\n\n  return _extends({}, arg2, {\n    queryKey: arg1\n  });\n}\nexport function parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return _extends({}, arg3, {\n        mutationKey: arg1,\n        mutationFn: arg2\n      });\n    }\n\n    return _extends({}, arg2, {\n      mutationKey: arg1\n    });\n  }\n\n  if (typeof arg1 === 'function') {\n    return _extends({}, arg2, {\n      mutationFn: arg1\n    });\n  }\n\n  return _extends({}, arg1);\n}\nexport function parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [_extends({}, arg2, {\n    queryKey: arg1\n  }), arg3] : [arg1 || {}, arg2];\n}\nexport function parseMutationFilterArgs(arg1, arg2) {\n  return isQueryKey(arg1) ? _extends({}, arg2, {\n    mutationKey: arg1\n  }) : arg1;\n}\nexport function mapQueryStatusFilter(active, inactive) {\n  if (active === true && inactive === true || active == null && inactive == null) {\n    return 'all';\n  } else if (active === false && inactive === false) {\n    return 'none';\n  } else {\n    // At this point, active|inactive can only be true|false or false|true\n    // so, when only one value is provided, the missing one has to be the negated value\n    var isActive = active != null ? active : !inactive;\n    return isActive ? 'active' : 'inactive';\n  }\n}\nexport function matchQuery(filters, query) {\n  var active = filters.active,\n      exact = filters.exact,\n      fetching = filters.fetching,\n      inactive = filters.inactive,\n      predicate = filters.predicate,\n      queryKey = filters.queryKey,\n      stale = filters.stale;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  var queryStatusFilter = mapQueryStatusFilter(active, inactive);\n\n  if (queryStatusFilter === 'none') {\n    return false;\n  } else if (queryStatusFilter !== 'all') {\n    var isActive = query.isActive();\n\n    if (queryStatusFilter === 'active' && !isActive) {\n      return false;\n    }\n\n    if (queryStatusFilter === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetching === 'boolean' && query.isFetching() !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nexport function matchMutation(filters, mutation) {\n  var exact = filters.exact,\n      fetching = filters.fetching,\n      predicate = filters.predicate,\n      mutationKey = filters.mutationKey;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nexport function hashQueryKeyByOptions(queryKey, options) {\n  var hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n */\n\nexport function hashQueryKey(queryKey) {\n  var asArray = ensureQueryKeyArray(queryKey);\n  return stableValueHash(asArray);\n}\n/**\n * Hashes the value into a stable hash.\n */\n\nexport function stableValueHash(value) {\n  return JSON.stringify(value, function (_, val) {\n    return isPlainObject(val) ? Object.keys(val).sort().reduce(function (result, key) {\n      result[key] = val[key];\n      return result;\n    }, {}) : val;\n  });\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nexport function partialMatchKey(a, b) {\n  return partialDeepEqual(ensureQueryKeyArray(a), ensureQueryKeyArray(b));\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nexport function partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(function (key) {\n      return !partialDeepEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nexport function replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  var array = Array.isArray(a) && Array.isArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    var aSize = array ? a.length : Object.keys(a).length;\n    var bItems = array ? b : Object.keys(b);\n    var bSize = bItems.length;\n    var copy = array ? [] : {};\n    var equalItems = 0;\n\n    for (var i = 0; i < bSize; i++) {\n      var key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nexport function shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (var key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nexport function isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  var ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  var prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isQueryKey(value) {\n  return typeof value === 'string' || Array.isArray(value);\n}\nexport function isError(value) {\n  return value instanceof Error;\n}\nexport function sleep(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nexport function scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}\nexport function getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n}","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { Subscribable } from './subscribable';\nimport { isServer } from './utils';\nexport var FocusManager = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(FocusManager, _Subscribable);\n\n  function FocusManager() {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n\n    _this.setup = function (onFocus) {\n      var _window;\n\n      if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n        var listener = function listener() {\n          return onFocus();\n        }; // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = FocusManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this$cleanup2,\n        _this2 = this;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(function (focused) {\n      if (typeof focused === 'boolean') {\n        _this2.setFocused(focused);\n      } else {\n        _this2.onFocus();\n      }\n    });\n  };\n\n  _proto.setFocused = function setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isFocused = function isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  };\n\n  return FocusManager;\n}(Subscribable);\nexport var focusManager = new FocusManager();","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { Subscribable } from './subscribable';\nimport { isServer } from './utils';\nexport var OnlineManager = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(OnlineManager, _Subscribable);\n\n  function OnlineManager() {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n\n    _this.setup = function (onOnline) {\n      var _window;\n\n      if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n        var listener = function listener() {\n          return onOnline();\n        }; // Listen to online\n\n\n        window.addEventListener('online', listener, false);\n        window.addEventListener('offline', listener, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', listener);\n          window.removeEventListener('offline', listener);\n        };\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = OnlineManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this$cleanup2,\n        _this2 = this;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(function (online) {\n      if (typeof online === 'boolean') {\n        _this2.setOnline(online);\n      } else {\n        _this2.onOnline();\n      }\n    });\n  };\n\n  _proto.setOnline = function setOnline(online) {\n    this.online = online;\n\n    if (online) {\n      this.onOnline();\n    }\n  };\n\n  _proto.onOnline = function onOnline() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isOnline = function isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  };\n\n  return OnlineManager;\n}(Subscribable);\nexport var onlineManager = new OnlineManager();","import { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { sleep } from './utils';\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * Math.pow(2, failureCount), 30000);\n}\n\nexport function isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\nexport var CancelledError = function CancelledError(options) {\n  this.revert = options == null ? void 0 : options.revert;\n  this.silent = options == null ? void 0 : options.silent;\n};\nexport function isCancelledError(value) {\n  return value instanceof CancelledError;\n} // CLASS\n\nexport var Retryer = function Retryer(config) {\n  var _this = this;\n\n  var cancelRetry = false;\n  var cancelFn;\n  var continueFn;\n  var promiseResolve;\n  var promiseReject;\n  this.abort = config.abort;\n\n  this.cancel = function (cancelOptions) {\n    return cancelFn == null ? void 0 : cancelFn(cancelOptions);\n  };\n\n  this.cancelRetry = function () {\n    cancelRetry = true;\n  };\n\n  this.continueRetry = function () {\n    cancelRetry = false;\n  };\n\n  this.continue = function () {\n    return continueFn == null ? void 0 : continueFn();\n  };\n\n  this.failureCount = 0;\n  this.isPaused = false;\n  this.isResolved = false;\n  this.isTransportCancelable = false;\n  this.promise = new Promise(function (outerResolve, outerReject) {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  var resolve = function resolve(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  var reject = function reject(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  var pause = function pause() {\n    return new Promise(function (continueResolve) {\n      continueFn = continueResolve;\n      _this.isPaused = true;\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(function () {\n      continueFn = undefined;\n      _this.isPaused = false;\n      config.onContinue == null ? void 0 : config.onContinue();\n    });\n  }; // Create loop function\n\n\n  var run = function run() {\n    // Do nothing if already resolved\n    if (_this.isResolved) {\n      return;\n    }\n\n    var promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    } // Create callback to cancel this fetch\n\n\n    cancelFn = function cancelFn(cancelOptions) {\n      if (!_this.isResolved) {\n        reject(new CancelledError(cancelOptions));\n        _this.abort == null ? void 0 : _this.abort(); // Cancel transport if supported\n\n        if (isCancelable(promiseOrValue)) {\n          try {\n            promiseOrValue.cancel();\n          } catch (_unused) {}\n        }\n      }\n    }; // Check if the transport layer support cancellation\n\n\n    _this.isTransportCancelable = isCancelable(promiseOrValue);\n    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (_this.isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      var delay = typeof retryDelay === 'function' ? retryDelay(_this.failureCount, error) : retryDelay;\n      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);\n\n      if (cancelRetry || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      _this.failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(function () {\n        if (!focusManager.isFocused() || !onlineManager.isOnline()) {\n          return pause();\n        }\n      }).then(function () {\n        if (cancelRetry) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  run();\n};","import { scheduleMicrotask } from './utils'; // TYPES\n\n// CLASS\nexport var NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n\n    this.notifyFn = function (callback) {\n      callback();\n    };\n\n    this.batchNotifyFn = function (callback) {\n      callback();\n    };\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    var result;\n    this.transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      this.transactions--;\n\n      if (!this.transactions) {\n        this.flush();\n      }\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(callback) {\n    var _this = this;\n\n    if (this.transactions) {\n      this.queue.push(callback);\n    } else {\n      scheduleMicrotask(function () {\n        _this.notifyFn(callback);\n      });\n    }\n  }\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  ;\n\n  _proto.batchCalls = function batchCalls(callback) {\n    var _this2 = this;\n\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2.schedule(function () {\n        callback.apply(void 0, args);\n      });\n    };\n  };\n\n  _proto.flush = function flush() {\n    var _this3 = this;\n\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        _this3.batchNotifyFn(function () {\n          queue.forEach(function (callback) {\n            _this3.notifyFn(callback);\n          });\n        });\n      });\n    }\n  }\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  ;\n\n  _proto.setNotifyFunction = function setNotifyFunction(fn) {\n    this.notifyFn = fn;\n  }\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  ;\n\n  _proto.setBatchNotifyFunction = function setBatchNotifyFunction(fn) {\n    this.batchNotifyFn = fn;\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nexport var notifyManager = new NotifyManager();","// TYPES\n// FUNCTIONS\nvar logger = console;\nexport function getLogger() {\n  return logger;\n}\nexport function setLogger(newLogger) {\n  logger = newLogger;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getAbortController, functionalUpdate, isValidTimeout, noop, replaceEqualDeep, timeUntilStale, ensureQueryKeyArray } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { getLogger } from './logger';\nimport { Retryer, isCancelledError } from './retryer'; // TYPES\n\n// CLASS\nexport var Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.abortSignalConsumed = false;\n    this.hadObservers = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || this.getDefaultState(this.options);\n    this.state = this.initialState;\n    this.meta = config.meta;\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.setOptions = function setOptions(options) {\n    var _this$options$cacheTi;\n\n    this.options = _extends({}, this.defaultOptions, options);\n    this.meta = options == null ? void 0 : options.meta; // Default to 5 minutes if not cache time is set\n\n    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1000);\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this = this;\n\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(function () {\n        _this.optionalRemove();\n      }, this.cacheTime);\n    }\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  };\n\n  _proto.optionalRemove = function optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.isFetching) {\n        if (this.hadObservers) {\n          this.scheduleGc();\n        }\n      } else {\n        this.cache.remove(this);\n      }\n    }\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$options$isDataE, _this$options;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = functionalUpdate(updater, prevData); // Use prev data if an isDataEqual function is defined and returns `true`\n\n    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {\n      data = prevData;\n    } else if (this.options.structuralSharing !== false) {\n      // Structurally share data between prev and new data if needed\n      data = replaceEqualDeep(prevData, data);\n    } // Set data and mark it as cached\n\n\n    this.dispatch({\n      data: data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt\n    });\n    return data;\n  };\n\n  _proto.setState = function setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state: state,\n      setStateOptions: setStateOptions\n    });\n  };\n\n  _proto.cancel = function cancel(options) {\n    var _this$retryer;\n\n    var promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.cancel({\n      silent: true\n    });\n  };\n\n  _proto.reset = function reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.options.enabled !== false;\n    });\n  };\n\n  _proto.isFetching = function isFetching() {\n    return this.state.isFetching;\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this$retryer2;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnWindowFocus();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this$retryer3;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnReconnect();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer);\n      this.hadObservers = true; // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    if (this.observers.indexOf(observer) !== -1) {\n      this.observers = this.observers.filter(function (x) {\n        return x !== observer;\n      });\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.retryer.isTransportCancelable || this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        if (this.cacheTime) {\n          this.scheduleGc();\n        } else {\n          this.cache.remove(this);\n        }\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.getObserversCount = function getObserversCount() {\n    return this.observers.length;\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  };\n\n  _proto.fetch = function fetch(options, fetchOptions) {\n    var _this2 = this,\n        _this$options$behavio,\n        _context$fetchOptions,\n        _abortController$abor;\n\n    if (this.state.isFetching) {\n      if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      var observer = this.observers.find(function (x) {\n        return x.options.queryFn;\n      });\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    var queryKey = ensureQueryKeyArray(this.queryKey);\n    var abortController = getAbortController(); // Create query function context\n\n    var queryFnContext = {\n      queryKey: queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    };\n    Object.defineProperty(queryFnContext, 'signal', {\n      enumerable: true,\n      get: function get() {\n        if (abortController) {\n          _this2.abortSignalConsumed = true;\n          return abortController.signal;\n        }\n\n        return undefined;\n      }\n    }); // Create fetch function\n\n    var fetchFn = function fetchFn() {\n      if (!_this2.options.queryFn) {\n        return Promise.reject('Missing queryFn');\n      }\n\n      _this2.abortSignalConsumed = false;\n      return _this2.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    var context = {\n      fetchOptions: fetchOptions,\n      options: this.options,\n      queryKey: queryKey,\n      state: this.state,\n      fetchFn: fetchFn,\n      meta: this.meta\n    };\n\n    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {\n      var _this$options$behavio2;\n\n      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context);\n    } // Store state in case the current fetch needs to be reverted\n\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    } // Try to fetch the data\n\n\n    this.retryer = new Retryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : (_abortController$abor = abortController.abort) == null ? void 0 : _abortController$abor.bind(abortController),\n      onSuccess: function onSuccess(data) {\n        _this2.setData(data); // Notify cache callback\n\n\n        _this2.cache.config.onSuccess == null ? void 0 : _this2.cache.config.onSuccess(data, _this2); // Remove query after fetching if cache time is 0\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onError: function onError(error) {\n        // Optimistically update state if needed\n        if (!(isCancelledError(error) && error.silent)) {\n          _this2.dispatch({\n            type: 'error',\n            error: error\n          });\n        }\n\n        if (!isCancelledError(error)) {\n          // Notify cache callback\n          _this2.cache.config.onError == null ? void 0 : _this2.cache.config.onError(error, _this2); // Log error\n\n          getLogger().error(error);\n        } // Remove query after fetching if cache time is 0\n\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = this.reducer(this.state, action);\n    notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this3.cache.notify({\n        query: _this3,\n        type: 'queryUpdated',\n        action: action\n      });\n    });\n  };\n\n  _proto.getDefaultState = function getDefaultState(options) {\n    var data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n    var hasInitialData = typeof options.initialData !== 'undefined';\n    var initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n    var hasData = typeof data !== 'undefined';\n    return {\n      data: data,\n      dataUpdateCount: 0,\n      dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n      error: null,\n      errorUpdateCount: 0,\n      errorUpdatedAt: 0,\n      fetchFailureCount: 0,\n      fetchMeta: null,\n      isFetching: false,\n      isInvalidated: false,\n      isPaused: false,\n      status: hasData ? 'success' : 'idle'\n    };\n  };\n\n  _proto.reducer = function reducer(state, action) {\n    var _action$meta, _action$dataUpdatedAt;\n\n    switch (action.type) {\n      case 'failed':\n        return _extends({}, state, {\n          fetchFailureCount: state.fetchFailureCount + 1\n        });\n\n      case 'pause':\n        return _extends({}, state, {\n          isPaused: true\n        });\n\n      case 'continue':\n        return _extends({}, state, {\n          isPaused: false\n        });\n\n      case 'fetch':\n        return _extends({}, state, {\n          fetchFailureCount: 0,\n          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n          isFetching: true,\n          isPaused: false\n        }, !state.dataUpdatedAt && {\n          error: null,\n          status: 'loading'\n        });\n\n      case 'success':\n        return _extends({}, state, {\n          data: action.data,\n          dataUpdateCount: state.dataUpdateCount + 1,\n          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n          error: null,\n          fetchFailureCount: 0,\n          isFetching: false,\n          isInvalidated: false,\n          isPaused: false,\n          status: 'success'\n        });\n\n      case 'error':\n        var error = action.error;\n\n        if (isCancelledError(error) && error.revert && this.revertState) {\n          return _extends({}, this.revertState);\n        }\n\n        return _extends({}, state, {\n          error: error,\n          errorUpdateCount: state.errorUpdateCount + 1,\n          errorUpdatedAt: Date.now(),\n          fetchFailureCount: state.fetchFailureCount + 1,\n          isFetching: false,\n          isPaused: false,\n          status: 'error'\n        });\n\n      case 'invalidate':\n        return _extends({}, state, {\n          isInvalidated: true\n        });\n\n      case 'setState':\n        return _extends({}, state, action.state);\n\n      default:\n        return state;\n    }\n  };\n\n  return Query;\n}();","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { hashQueryKeyByOptions, matchQuery, parseFilterArgs } from './utils';\nimport { Query } from './query';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\n// CLASS\nexport var QueryCache = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryCache, _Subscribable);\n\n  function QueryCache(config) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.config = config || {};\n    _this.queries = [];\n    _this.queriesMap = {};\n    return _this;\n  }\n\n  var _proto = QueryCache.prototype;\n\n  _proto.build = function build(client, options, state) {\n    var _options$queryHash;\n\n    var queryKey = options.queryKey;\n    var queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : hashQueryKeyByOptions(queryKey, options);\n    var query = this.get(queryHash);\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey: queryKey,\n        queryHash: queryHash,\n        options: client.defaultQueryOptions(options),\n        state: state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n        meta: options.meta\n      });\n      this.add(query);\n    }\n\n    return query;\n  };\n\n  _proto.add = function add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'queryAdded',\n        query: query\n      });\n    }\n  };\n\n  _proto.remove = function remove(query) {\n    var queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(function (x) {\n        return x !== query;\n      });\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'queryRemoved',\n        query: query\n      });\n    }\n  };\n\n  _proto.clear = function clear() {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      _this2.queries.forEach(function (query) {\n        _this2.remove(query);\n      });\n    });\n  };\n\n  _proto.get = function get(queryHash) {\n    return this.queriesMap[queryHash];\n  };\n\n  _proto.getAll = function getAll() {\n    return this.queries;\n  };\n\n  _proto.find = function find(arg1, arg2) {\n    var _parseFilterArgs = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs[0];\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(function (query) {\n      return matchQuery(filters, query);\n    });\n  };\n\n  _proto.findAll = function findAll(arg1, arg2) {\n    var _parseFilterArgs2 = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs2[0];\n\n    return Object.keys(filters).length > 0 ? this.queries.filter(function (query) {\n      return matchQuery(filters, query);\n    }) : this.queries;\n  };\n\n  _proto.notify = function notify(event) {\n    var _this3 = this;\n\n    notifyManager.batch(function () {\n      _this3.listeners.forEach(function (listener) {\n        listener(event);\n      });\n    });\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this4 = this;\n\n    notifyManager.batch(function () {\n      _this4.queries.forEach(function (query) {\n        query.onFocus();\n      });\n    });\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this5 = this;\n\n    notifyManager.batch(function () {\n      _this5.queries.forEach(function (query) {\n        query.onOnline();\n      });\n    });\n  };\n\n  return QueryCache;\n}(Subscribable);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getLogger } from './logger';\nimport { notifyManager } from './notifyManager';\nimport { Retryer } from './retryer';\nimport { noop } from './utils'; // TYPES\n\n// CLASS\nexport var Mutation = /*#__PURE__*/function () {\n  function Mutation(config) {\n    this.options = _extends({}, config.defaultOptions, config.options);\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n    this.meta = config.meta;\n  }\n\n  var _proto = Mutation.prototype;\n\n  _proto.setState = function setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state: state\n    });\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer);\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    this.observers = this.observers.filter(function (x) {\n      return x !== observer;\n    });\n  };\n\n  _proto.cancel = function cancel() {\n    if (this.retryer) {\n      this.retryer.cancel();\n      return this.retryer.promise.then(noop).catch(noop);\n    }\n\n    return Promise.resolve();\n  };\n\n  _proto.continue = function _continue() {\n    if (this.retryer) {\n      this.retryer.continue();\n      return this.retryer.promise;\n    }\n\n    return this.execute();\n  };\n\n  _proto.execute = function execute() {\n    var _this = this;\n\n    var data;\n    var restored = this.state.status === 'loading';\n    var promise = Promise.resolve();\n\n    if (!restored) {\n      this.dispatch({\n        type: 'loading',\n        variables: this.options.variables\n      });\n      promise = promise.then(function () {\n        // Notify cache callback\n        _this.mutationCache.config.onMutate == null ? void 0 : _this.mutationCache.config.onMutate(_this.state.variables, _this);\n      }).then(function () {\n        return _this.options.onMutate == null ? void 0 : _this.options.onMutate(_this.state.variables);\n      }).then(function (context) {\n        if (context !== _this.state.context) {\n          _this.dispatch({\n            type: 'loading',\n            context: context,\n            variables: _this.state.variables\n          });\n        }\n      });\n    }\n\n    return promise.then(function () {\n      return _this.executeMutation();\n    }).then(function (result) {\n      data = result; // Notify cache callback\n\n      _this.mutationCache.config.onSuccess == null ? void 0 : _this.mutationCache.config.onSuccess(data, _this.state.variables, _this.state.context, _this);\n    }).then(function () {\n      return _this.options.onSuccess == null ? void 0 : _this.options.onSuccess(data, _this.state.variables, _this.state.context);\n    }).then(function () {\n      return _this.options.onSettled == null ? void 0 : _this.options.onSettled(data, null, _this.state.variables, _this.state.context);\n    }).then(function () {\n      _this.dispatch({\n        type: 'success',\n        data: data\n      });\n\n      return data;\n    }).catch(function (error) {\n      // Notify cache callback\n      _this.mutationCache.config.onError == null ? void 0 : _this.mutationCache.config.onError(error, _this.state.variables, _this.state.context, _this); // Log error\n\n      getLogger().error(error);\n      return Promise.resolve().then(function () {\n        return _this.options.onError == null ? void 0 : _this.options.onError(error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        return _this.options.onSettled == null ? void 0 : _this.options.onSettled(undefined, error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        _this.dispatch({\n          type: 'error',\n          error: error\n        });\n\n        throw error;\n      });\n    });\n  };\n\n  _proto.executeMutation = function executeMutation() {\n    var _this2 = this,\n        _this$options$retry;\n\n    this.retryer = new Retryer({\n      fn: function fn() {\n        if (!_this2.options.mutationFn) {\n          return Promise.reject('No mutationFn found');\n        }\n\n        return _this2.options.mutationFn(_this2.state.variables);\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n      retryDelay: this.options.retryDelay\n    });\n    return this.retryer.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = reducer(this.state, action);\n    notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onMutationUpdate(action);\n      });\n\n      _this3.mutationCache.notify(_this3);\n    });\n  };\n\n  return Mutation;\n}();\nexport function getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'failed':\n      return _extends({}, state, {\n        failureCount: state.failureCount + 1\n      });\n\n    case 'pause':\n      return _extends({}, state, {\n        isPaused: true\n      });\n\n    case 'continue':\n      return _extends({}, state, {\n        isPaused: false\n      });\n\n    case 'loading':\n      return _extends({}, state, {\n        context: action.context,\n        data: undefined,\n        error: null,\n        isPaused: false,\n        status: 'loading',\n        variables: action.variables\n      });\n\n    case 'success':\n      return _extends({}, state, {\n        data: action.data,\n        error: null,\n        status: 'success',\n        isPaused: false\n      });\n\n    case 'error':\n      return _extends({}, state, {\n        data: undefined,\n        error: action.error,\n        failureCount: state.failureCount + 1,\n        isPaused: false,\n        status: 'error'\n      });\n\n    case 'setState':\n      return _extends({}, state, action.state);\n\n    default:\n      return state;\n  }\n}","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { notifyManager } from './notifyManager';\nimport { Mutation } from './mutation';\nimport { matchMutation, noop } from './utils';\nimport { Subscribable } from './subscribable'; // TYPES\n\n// CLASS\nexport var MutationCache = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationCache, _Subscribable);\n\n  function MutationCache(config) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.config = config || {};\n    _this.mutations = [];\n    _this.mutationId = 0;\n    return _this;\n  }\n\n  var _proto = MutationCache.prototype;\n\n  _proto.build = function build(client, options, state) {\n    var mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state: state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined,\n      meta: options.meta\n    });\n    this.add(mutation);\n    return mutation;\n  };\n\n  _proto.add = function add(mutation) {\n    this.mutations.push(mutation);\n    this.notify(mutation);\n  };\n\n  _proto.remove = function remove(mutation) {\n    this.mutations = this.mutations.filter(function (x) {\n      return x !== mutation;\n    });\n    mutation.cancel();\n    this.notify(mutation);\n  };\n\n  _proto.clear = function clear() {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      _this2.mutations.forEach(function (mutation) {\n        _this2.remove(mutation);\n      });\n    });\n  };\n\n  _proto.getAll = function getAll() {\n    return this.mutations;\n  };\n\n  _proto.find = function find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(function (mutation) {\n      return matchMutation(filters, mutation);\n    });\n  };\n\n  _proto.findAll = function findAll(filters) {\n    return this.mutations.filter(function (mutation) {\n      return matchMutation(filters, mutation);\n    });\n  };\n\n  _proto.notify = function notify(mutation) {\n    var _this3 = this;\n\n    notifyManager.batch(function () {\n      _this3.listeners.forEach(function (listener) {\n        listener(mutation);\n      });\n    });\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.resumePausedMutations();\n  };\n\n  _proto.onOnline = function onOnline() {\n    this.resumePausedMutations();\n  };\n\n  _proto.resumePausedMutations = function resumePausedMutations() {\n    var pausedMutations = this.mutations.filter(function (x) {\n      return x.state.isPaused;\n    });\n    return notifyManager.batch(function () {\n      return pausedMutations.reduce(function (promise, mutation) {\n        return promise.then(function () {\n          return mutation.continue().catch(noop);\n        });\n      }, Promise.resolve());\n    });\n  };\n\n  return MutationCache;\n}(Subscribable);","import { isCancelable } from './retryer';\nimport { getAbortController } from './utils';\nexport function infiniteQueryBehavior() {\n  return {\n    onFetch: function onFetch(context) {\n      context.fetchFn = function () {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        var refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        var fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        var pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        var isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        var isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        var oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        var oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        var abortController = getAbortController();\n        var abortSignal = abortController == null ? void 0 : abortController.signal;\n        var newPageParams = oldPageParams;\n        var cancelled = false; // Get query function\n\n        var queryFn = context.options.queryFn || function () {\n          return Promise.reject('Missing queryFn');\n        };\n\n        var buildNewPages = function buildNewPages(pages, param, page, previous) {\n          newPageParams = previous ? [param].concat(newPageParams) : [].concat(newPageParams, [param]);\n          return previous ? [page].concat(pages) : [].concat(pages, [page]);\n        }; // Create function to fetch a page\n\n\n        var fetchPage = function fetchPage(pages, manual, param, previous) {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          var queryFnContext = {\n            queryKey: context.queryKey,\n            signal: abortSignal,\n            pageParam: param,\n            meta: context.meta\n          };\n          var queryFnResult = queryFn(queryFnContext);\n          var promise = Promise.resolve(queryFnResult).then(function (page) {\n            return buildNewPages(pages, param, page, previous);\n          });\n\n          if (isCancelable(queryFnResult)) {\n            var promiseAsAny = promise;\n            promiseAsAny.cancel = queryFnResult.cancel;\n          }\n\n          return promise;\n        };\n\n        var promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n            var manual = typeof pageParam !== 'undefined';\n            var param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n            promise = fetchPage(oldPages, manual, param);\n          } // Fetch previous page?\n          else if (isFetchingPreviousPage) {\n              var _manual = typeof pageParam !== 'undefined';\n\n              var _param = _manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n\n              promise = fetchPage(oldPages, _manual, _param, true);\n            } // Refetch pages\n            else {\n                (function () {\n                  newPageParams = [];\n                  var manual = typeof context.options.getNextPageParam === 'undefined';\n                  var shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n                  promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n                  var _loop = function _loop(i) {\n                    promise = promise.then(function (pages) {\n                      var shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n                      if (shouldFetchNextPage) {\n                        var _param2 = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n\n                        return fetchPage(pages, manual, _param2);\n                      }\n\n                      return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n                    });\n                  };\n\n                  for (var i = 1; i < oldPages.length; i++) {\n                    _loop(i);\n                  }\n                })();\n              }\n\n        var finalPromise = promise.then(function (pages) {\n          return {\n            pages: pages,\n            pageParams: newPageParams\n          };\n        });\n        var finalPromiseAsAny = finalPromise;\n\n        finalPromiseAsAny.cancel = function () {\n          cancelled = true;\n          abortController == null ? void 0 : abortController.abort();\n\n          if (isCancelable(promise)) {\n            promise.cancel();\n          }\n        };\n\n        return finalPromise;\n      };\n    }\n  };\n}\nexport function getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nexport function getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    var nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    var previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { hashQueryKey, noop, parseFilterArgs, parseQueryArgs, partialMatchKey, hashQueryKeyByOptions } from './utils';\nimport { QueryCache } from './queryCache';\nimport { MutationCache } from './mutationCache';\nimport { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { notifyManager } from './notifyManager';\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior';\n// CLASS\nexport var QueryClient = /*#__PURE__*/function () {\n  function QueryClient(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this.queryCache = config.queryCache || new QueryCache();\n    this.mutationCache = config.mutationCache || new MutationCache();\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n  }\n\n  var _proto = QueryClient.prototype;\n\n  _proto.mount = function mount() {\n    var _this = this;\n\n    this.unsubscribeFocus = focusManager.subscribe(function () {\n      if (focusManager.isFocused() && onlineManager.isOnline()) {\n        _this.mutationCache.onFocus();\n\n        _this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = onlineManager.subscribe(function () {\n      if (focusManager.isFocused() && onlineManager.isOnline()) {\n        _this.mutationCache.onOnline();\n\n        _this.queryCache.onOnline();\n      }\n    });\n  };\n\n  _proto.unmount = function unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n  };\n\n  _proto.isFetching = function isFetching(arg1, arg2) {\n    var _parseFilterArgs = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs[0];\n\n    filters.fetching = true;\n    return this.queryCache.findAll(filters).length;\n  };\n\n  _proto.isMutating = function isMutating(filters) {\n    return this.mutationCache.findAll(_extends({}, filters, {\n      fetching: true\n    })).length;\n  };\n\n  _proto.getQueryData = function getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  };\n\n  _proto.getQueriesData = function getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(function (_ref) {\n      var queryKey = _ref.queryKey,\n          state = _ref.state;\n      var data = state.data;\n      return [queryKey, data];\n    });\n  };\n\n  _proto.setQueryData = function setQueryData(queryKey, updater, options) {\n    var parsedOptions = parseQueryArgs(queryKey);\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(updater, options);\n  };\n\n  _proto.setQueriesData = function setQueriesData(queryKeyOrFilters, updater, options) {\n    var _this2 = this;\n\n    return notifyManager.batch(function () {\n      return _this2.getQueryCache().findAll(queryKeyOrFilters).map(function (_ref2) {\n        var queryKey = _ref2.queryKey;\n        return [queryKey, _this2.setQueryData(queryKey, updater, options)];\n      });\n    });\n  };\n\n  _proto.getQueryState = function getQueryState(queryKey, filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  };\n\n  _proto.removeQueries = function removeQueries(arg1, arg2) {\n    var _parseFilterArgs2 = parseFilterArgs(arg1, arg2),\n        filters = _parseFilterArgs2[0];\n\n    var queryCache = this.queryCache;\n    notifyManager.batch(function () {\n      queryCache.findAll(filters).forEach(function (query) {\n        queryCache.remove(query);\n      });\n    });\n  };\n\n  _proto.resetQueries = function resetQueries(arg1, arg2, arg3) {\n    var _this3 = this;\n\n    var _parseFilterArgs3 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs3[0],\n        options = _parseFilterArgs3[1];\n\n    var queryCache = this.queryCache;\n\n    var refetchFilters = _extends({}, filters, {\n      active: true\n    });\n\n    return notifyManager.batch(function () {\n      queryCache.findAll(filters).forEach(function (query) {\n        query.reset();\n      });\n      return _this3.refetchQueries(refetchFilters, options);\n    });\n  };\n\n  _proto.cancelQueries = function cancelQueries(arg1, arg2, arg3) {\n    var _this4 = this;\n\n    var _parseFilterArgs4 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs4[0],\n        _parseFilterArgs4$ = _parseFilterArgs4[1],\n        cancelOptions = _parseFilterArgs4$ === void 0 ? {} : _parseFilterArgs4$;\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    var promises = notifyManager.batch(function () {\n      return _this4.queryCache.findAll(filters).map(function (query) {\n        return query.cancel(cancelOptions);\n      });\n    });\n    return Promise.all(promises).then(noop).catch(noop);\n  };\n\n  _proto.invalidateQueries = function invalidateQueries(arg1, arg2, arg3) {\n    var _ref3,\n        _filters$refetchActiv,\n        _filters$refetchInact,\n        _this5 = this;\n\n    var _parseFilterArgs5 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs5[0],\n        options = _parseFilterArgs5[1];\n\n    var refetchFilters = _extends({}, filters, {\n      // if filters.refetchActive is not provided and filters.active is explicitly false,\n      // e.g. invalidateQueries({ active: false }), we don't want to refetch active queries\n      active: (_ref3 = (_filters$refetchActiv = filters.refetchActive) != null ? _filters$refetchActiv : filters.active) != null ? _ref3 : true,\n      inactive: (_filters$refetchInact = filters.refetchInactive) != null ? _filters$refetchInact : false\n    });\n\n    return notifyManager.batch(function () {\n      _this5.queryCache.findAll(filters).forEach(function (query) {\n        query.invalidate();\n      });\n\n      return _this5.refetchQueries(refetchFilters, options);\n    });\n  };\n\n  _proto.refetchQueries = function refetchQueries(arg1, arg2, arg3) {\n    var _this6 = this;\n\n    var _parseFilterArgs6 = parseFilterArgs(arg1, arg2, arg3),\n        filters = _parseFilterArgs6[0],\n        options = _parseFilterArgs6[1];\n\n    var promises = notifyManager.batch(function () {\n      return _this6.queryCache.findAll(filters).map(function (query) {\n        return query.fetch(undefined, _extends({}, options, {\n          meta: {\n            refetchPage: filters == null ? void 0 : filters.refetchPage\n          }\n        }));\n      });\n    });\n    var promise = Promise.all(promises).then(noop);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {\n    var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    var query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  };\n\n  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  };\n\n  _proto.fetchInfiniteQuery = function fetchInfiniteQuery(arg1, arg2, arg3) {\n    var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    parsedOptions.behavior = infiniteQueryBehavior();\n    return this.fetchQuery(parsedOptions);\n  };\n\n  _proto.prefetchInfiniteQuery = function prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  };\n\n  _proto.cancelMutations = function cancelMutations() {\n    var _this7 = this;\n\n    var promises = notifyManager.batch(function () {\n      return _this7.mutationCache.getAll().map(function (mutation) {\n        return mutation.cancel();\n      });\n    });\n    return Promise.all(promises).then(noop).catch(noop);\n  };\n\n  _proto.resumePausedMutations = function resumePausedMutations() {\n    return this.getMutationCache().resumePausedMutations();\n  };\n\n  _proto.executeMutation = function executeMutation(options) {\n    return this.mutationCache.build(this, options).execute();\n  };\n\n  _proto.getQueryCache = function getQueryCache() {\n    return this.queryCache;\n  };\n\n  _proto.getMutationCache = function getMutationCache() {\n    return this.mutationCache;\n  };\n\n  _proto.getDefaultOptions = function getDefaultOptions() {\n    return this.defaultOptions;\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.setQueryDefaults = function setQueryDefaults(queryKey, options) {\n    var result = this.queryDefaults.find(function (x) {\n      return hashQueryKey(queryKey) === hashQueryKey(x.queryKey);\n    });\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey: queryKey,\n        defaultOptions: options\n      });\n    }\n  };\n\n  _proto.getQueryDefaults = function getQueryDefaults(queryKey) {\n    var _this$queryDefaults$f;\n\n    return queryKey ? (_this$queryDefaults$f = this.queryDefaults.find(function (x) {\n      return partialMatchKey(queryKey, x.queryKey);\n    })) == null ? void 0 : _this$queryDefaults$f.defaultOptions : undefined;\n  };\n\n  _proto.setMutationDefaults = function setMutationDefaults(mutationKey, options) {\n    var result = this.mutationDefaults.find(function (x) {\n      return hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey);\n    });\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey: mutationKey,\n        defaultOptions: options\n      });\n    }\n  };\n\n  _proto.getMutationDefaults = function getMutationDefaults(mutationKey) {\n    var _this$mutationDefault;\n\n    return mutationKey ? (_this$mutationDefault = this.mutationDefaults.find(function (x) {\n      return partialMatchKey(mutationKey, x.mutationKey);\n    })) == null ? void 0 : _this$mutationDefault.defaultOptions : undefined;\n  };\n\n  _proto.defaultQueryOptions = function defaultQueryOptions(options) {\n    if (options == null ? void 0 : options._defaulted) {\n      return options;\n    }\n\n    var defaultedOptions = _extends({}, this.defaultOptions.queries, this.getQueryDefaults(options == null ? void 0 : options.queryKey), options, {\n      _defaulted: true\n    });\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(defaultedOptions.queryKey, defaultedOptions);\n    }\n\n    return defaultedOptions;\n  };\n\n  _proto.defaultQueryObserverOptions = function defaultQueryObserverOptions(options) {\n    return this.defaultQueryOptions(options);\n  };\n\n  _proto.defaultMutationOptions = function defaultMutationOptions(options) {\n    if (options == null ? void 0 : options._defaulted) {\n      return options;\n    }\n\n    return _extends({}, this.defaultOptions.mutations, this.getMutationDefaults(options == null ? void 0 : options.mutationKey), options, {\n      _defaulted: true\n    });\n  };\n\n  _proto.clear = function clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  };\n\n  return QueryClient;\n}();","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.selectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    var nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result, defaultedOptions) {\n    var _this2 = this;\n\n    var trackedResult = {};\n\n    var trackProp = function trackProp(key) {\n      if (!_this2.trackedProps.includes(key)) {\n        _this2.trackedProps.push(key);\n      }\n    };\n\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          trackProp(key);\n          return result[key];\n        }\n      });\n    });\n\n    if (defaultedOptions.useErrorBoundary || defaultedOptions.suspense) {\n      trackProp('error');\n    }\n\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(_extends({}, options, {\n      meta: {\n        refetchPage: options == null ? void 0 : options.refetchPage\n      }\n    }));\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.computeRefetchInterval = function computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval(nextInterval) {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n          data = this.selectResult;\n        } else {\n          try {\n            this.selectFn = options.select;\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.selectResult = data;\n            this.selectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            this.selectError = selectError;\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.selectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isRefetching: isFetching && status !== 'loading',\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    var value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import ReactDOM from 'react-dom';\nexport var unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;","import { notifyManager } from '../core';\nimport { unstable_batchedUpdates } from './reactBatchedUpdates';\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates);","export var logger = console;","import { setLogger } from '../core';\nimport { logger } from './logger';\nsetLogger(logger);","import React from 'react';\nvar defaultContext = /*#__PURE__*/React.createContext(undefined);\nvar QueryClientSharingContext = /*#__PURE__*/React.createContext(false); // if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(contextSharing) {\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nexport var useQueryClient = function useQueryClient() {\n  var queryClient = React.useContext(getQueryClientContext(React.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nexport var QueryClientProvider = function QueryClientProvider(_ref) {\n  var client = _ref.client,\n      _ref$contextSharing = _ref.contextSharing,\n      contextSharing = _ref$contextSharing === void 0 ? false : _ref$contextSharing,\n      children = _ref.children;\n  React.useEffect(function () {\n    client.mount();\n    return function () {\n      client.unmount();\n    };\n  }, [client]);\n  var Context = getQueryClientContext(contextSharing);\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\n    value: contextSharing\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children));\n};","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","export function shouldThrowError(suspense, _useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary.apply(void 0, params);\n  } // Allow useErrorBoundary to override suspense's throwing behavior\n\n\n  if (typeof _useErrorBoundary === 'boolean') return _useErrorBoundary; // If suspense is enabled default to throwing errors\n\n  return !!suspense;\n}","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nimport { shouldThrowError } from './utils';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    } // Set cache time to 1 if the option has been set to 0\n    // when using suspense to prevent infinite loop of fetches\n\n\n    if (defaultedOptions.cacheTime === 0) {\n      defaultedOptions.cacheTime = 1;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.suspense, defaultedOptions.useErrorBoundary, [result.error, observer.getCurrentQuery()])) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result, defaultedOptions);\n  }\n\n  return result;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import React, { createContext, useContext, useState, useEffect } from 'react'\n\nconst ThemeContext = createContext()\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext)\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider')\n  }\n  return context\n}\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const saved = localStorage.getItem('theme')\n    return saved ? saved === 'dark' : window.matchMedia('(prefers-color-scheme: dark)').matches\n  })\n\n  useEffect(() => {\n    const root = window.document.documentElement\n    if (isDark) {\n      root.classList.add('dark')\n      localStorage.setItem('theme', 'dark')\n    } else {\n      root.classList.remove('dark')\n      localStorage.setItem('theme', 'light')\n    }\n  }, [isDark])\n\n  const toggleTheme = () => setIsDark(!isDark)\n\n  const value = {\n    isDark,\n    toggleTheme,\n    theme: isDark ? 'dark' : 'light'\n  }\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.mjs';\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, children, ...rest }, ref) => createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: `lucide lucide-${toKebabCase(iconName)}`,\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...(Array.isArray(children) ? children : [children]) || []\n      ]\n    )\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\nvar createLucideIcon$1 = createLucideIcon;\n\nexport { createLucideIcon$1 as default, toKebabCase };\n//# sourceMappingURL=createLucideIcon.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Activity = createLucideIcon(\"Activity\", [\n  [\"path\", { d: \"M22 12h-4l-3 9L9 3l-3 9H2\", key: \"d5dnw9\" }]\n]);\n\nexport { Activity as default };\n//# sourceMappingURL=activity.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst AlertCircle = createLucideIcon(\"AlertCircle\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"8\", y2: \"12\", key: \"1pkeuh\" }],\n  [\"line\", { x1: \"12\", x2: \"12.01\", y1: \"16\", y2: \"16\", key: \"4dfq90\" }]\n]);\n\nexport { AlertCircle as default };\n//# sourceMappingURL=alert-circle.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst ArrowRight = createLucideIcon(\"ArrowRight\", [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n]);\n\nexport { ArrowRight as default };\n//# sourceMappingURL=arrow-right.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Award = createLucideIcon(\"Award\", [\n  [\"circle\", { cx: \"12\", cy: \"8\", r: \"6\", key: \"1vp47v\" }],\n  [\"path\", { d: \"M15.477 12.89 17 22l-5-3-5 3 1.523-9.11\", key: \"em7aur\" }]\n]);\n\nexport { Award as default };\n//# sourceMappingURL=award.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst BarChart3 = createLucideIcon(\"BarChart3\", [\n  [\"path\", { d: \"M3 3v18h18\", key: \"1s2lah\" }],\n  [\"path\", { d: \"M18 17V9\", key: \"2bz60n\" }],\n  [\"path\", { d: \"M13 17V5\", key: \"1frdt8\" }],\n  [\"path\", { d: \"M8 17v-3\", key: \"17ska0\" }]\n]);\n\nexport { BarChart3 as default };\n//# sourceMappingURL=bar-chart-3.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst BookOpen = createLucideIcon(\"BookOpen\", [\n  [\"path\", { d: \"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\", key: \"vv98re\" }],\n  [\"path\", { d: \"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\", key: \"1cyq3y\" }]\n]);\n\nexport { BookOpen as default };\n//# sourceMappingURL=book-open.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Building2 = createLucideIcon(\"Building2\", [\n  [\"path\", { d: \"M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z\", key: \"1b4qmf\" }],\n  [\"path\", { d: \"M6 12H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2\", key: \"i71pzd\" }],\n  [\"path\", { d: \"M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2\", key: \"10jefs\" }],\n  [\"path\", { d: \"M10 6h4\", key: \"1itunk\" }],\n  [\"path\", { d: \"M10 10h4\", key: \"tcdvrf\" }],\n  [\"path\", { d: \"M10 14h4\", key: \"kelpxr\" }],\n  [\"path\", { d: \"M10 18h4\", key: \"1ulq68\" }]\n]);\n\nexport { Building2 as default };\n//# sourceMappingURL=building-2.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Calendar = createLucideIcon(\"Calendar\", [\n  [\n    \"rect\",\n    {\n      width: \"18\",\n      height: \"18\",\n      x: \"3\",\n      y: \"4\",\n      rx: \"2\",\n      ry: \"2\",\n      key: \"eu3xkr\"\n    }\n  ],\n  [\"line\", { x1: \"16\", x2: \"16\", y1: \"2\", y2: \"6\", key: \"m3sa8f\" }],\n  [\"line\", { x1: \"8\", x2: \"8\", y1: \"2\", y2: \"6\", key: \"18kwsl\" }],\n  [\"line\", { x1: \"3\", x2: \"21\", y1: \"10\", y2: \"10\", key: \"xt86sb\" }]\n]);\n\nexport { Calendar as default };\n//# sourceMappingURL=calendar.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Database = createLucideIcon(\"Database\", [\n  [\"ellipse\", { cx: \"12\", cy: \"5\", rx: \"9\", ry: \"3\", key: \"msslwz\" }],\n  [\"path\", { d: \"M3 5V19A9 3 0 0 0 21 19V5\", key: \"1wlel7\" }],\n  [\"path\", { d: \"M3 12A9 3 0 0 0 21 12\", key: \"mv7ke4\" }]\n]);\n\nexport { Database as default };\n//# sourceMappingURL=database.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Eye = createLucideIcon(\"Eye\", [\n  [\n    \"path\",\n    { d: \"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\", key: \"rwhkz3\" }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }]\n]);\n\nexport { Eye as default };\n//# sourceMappingURL=eye.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Filter = createLucideIcon(\"Filter\", [\n  [\n    \"polygon\",\n    { points: \"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\", key: \"1yg77f\" }\n  ]\n]);\n\nexport { Filter as default };\n//# sourceMappingURL=filter.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst GraduationCap = createLucideIcon(\"GraduationCap\", [\n  [\"path\", { d: \"M22 10v6M2 10l10-5 10 5-10 5z\", key: \"1ef52a\" }],\n  [\"path\", { d: \"M6 12v5c3 3 9 3 12 0v-5\", key: \"1f75yj\" }]\n]);\n\nexport { GraduationCap as default };\n//# sourceMappingURL=graduation-cap.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Hash = createLucideIcon(\"Hash\", [\n  [\"line\", { x1: \"4\", x2: \"20\", y1: \"9\", y2: \"9\", key: \"4lhtct\" }],\n  [\"line\", { x1: \"4\", x2: \"20\", y1: \"15\", y2: \"15\", key: \"vyu0kd\" }],\n  [\"line\", { x1: \"10\", x2: \"8\", y1: \"3\", y2: \"21\", key: \"1ggp8o\" }],\n  [\"line\", { x1: \"16\", x2: \"14\", y1: \"3\", y2: \"21\", key: \"weycgp\" }]\n]);\n\nexport { Hash as default };\n//# sourceMappingURL=hash.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Heart = createLucideIcon(\"Heart\", [\n  [\n    \"path\",\n    {\n      d: \"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\",\n      key: \"c3ymky\"\n    }\n  ]\n]);\n\nexport { Heart as default };\n//# sourceMappingURL=heart.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Home = createLucideIcon(\"Home\", [\n  [\n    \"path\",\n    { d: \"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\", key: \"y5dka4\" }\n  ],\n  [\"polyline\", { points: \"9 22 9 12 15 12 15 22\", key: \"e2us08\" }]\n]);\n\nexport { Home as default };\n//# sourceMappingURL=home.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Loader2 = createLucideIcon(\"Loader2\", [\n  [\"path\", { d: \"M21 12a9 9 0 1 1-6.219-8.56\", key: \"13zald\" }]\n]);\n\nexport { Loader2 as default };\n//# sourceMappingURL=loader-2.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst MapPin = createLucideIcon(\"MapPin\", [\n  [\n    \"path\",\n    { d: \"M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z\", key: \"2oe9fu\" }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"10\", r: \"3\", key: \"ilqhr7\" }]\n]);\n\nexport { MapPin as default };\n//# sourceMappingURL=map-pin.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Menu = createLucideIcon(\"Menu\", [\n  [\"line\", { x1: \"4\", x2: \"20\", y1: \"12\", y2: \"12\", key: \"1e0a9i\" }],\n  [\"line\", { x1: \"4\", x2: \"20\", y1: \"6\", y2: \"6\", key: \"1owob3\" }],\n  [\"line\", { x1: \"4\", x2: \"20\", y1: \"18\", y2: \"18\", key: \"yk5zj1\" }]\n]);\n\nexport { Menu as default };\n//# sourceMappingURL=menu.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Moon = createLucideIcon(\"Moon\", [\n  [\"path\", { d: \"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\", key: \"a7tn18\" }]\n]);\n\nexport { Moon as default };\n//# sourceMappingURL=moon.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Search = createLucideIcon(\"Search\", [\n  [\"circle\", { cx: \"11\", cy: \"11\", r: \"8\", key: \"4ej97u\" }],\n  [\"path\", { d: \"m21 21-4.3-4.3\", key: \"1qie3q\" }]\n]);\n\nexport { Search as default };\n//# sourceMappingURL=search.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Star = createLucideIcon(\"Star\", [\n  [\n    \"polygon\",\n    {\n      points: \"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\",\n      key: \"8f66p6\"\n    }\n  ]\n]);\n\nexport { Star as default };\n//# sourceMappingURL=star.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Stethoscope = createLucideIcon(\"Stethoscope\", [\n  [\n    \"path\",\n    {\n      d: \"M4.8 2.3A.3.3 0 1 0 5 2H4a2 2 0 0 0-2 2v5a6 6 0 0 0 6 6v0a6 6 0 0 0 6-6V4a2 2 0 0 0-2-2h-1a.2.2 0 1 0 .3.3\",\n      key: \"1jd90r\"\n    }\n  ],\n  [\"path\", { d: \"M8 15v1a6 6 0 0 0 6 6v0a6 6 0 0 0 6-6v-4\", key: \"126ukv\" }],\n  [\"circle\", { cx: \"20\", cy: \"10\", r: \"2\", key: \"ts1r5v\" }]\n]);\n\nexport { Stethoscope as default };\n//# sourceMappingURL=stethoscope.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Sun = createLucideIcon(\"Sun\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"4\", key: \"4exip2\" }],\n  [\"path\", { d: \"M12 2v2\", key: \"tus03m\" }],\n  [\"path\", { d: \"M12 20v2\", key: \"1lh1kg\" }],\n  [\"path\", { d: \"m4.93 4.93 1.41 1.41\", key: \"149t6j\" }],\n  [\"path\", { d: \"m17.66 17.66 1.41 1.41\", key: \"ptbguv\" }],\n  [\"path\", { d: \"M2 12h2\", key: \"1t8f8n\" }],\n  [\"path\", { d: \"M20 12h2\", key: \"1q8mjw\" }],\n  [\"path\", { d: \"m6.34 17.66-1.41 1.41\", key: \"1m8zz5\" }],\n  [\"path\", { d: \"m19.07 4.93-1.41 1.41\", key: \"1shlcs\" }]\n]);\n\nexport { Sun as default };\n//# sourceMappingURL=sun.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Target = createLucideIcon(\"Target\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"6\", key: \"1vlfrh\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"2\", key: \"1c9p78\" }]\n]);\n\nexport { Target as default };\n//# sourceMappingURL=target.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst TrendingUp = createLucideIcon(\"TrendingUp\", [\n  [\"polyline\", { points: \"22 7 13.5 15.5 8.5 10.5 2 17\", key: \"126l90\" }],\n  [\"polyline\", { points: \"16 7 22 7 22 13\", key: \"kwv8wd\" }]\n]);\n\nexport { TrendingUp as default };\n//# sourceMappingURL=trending-up.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Users = createLucideIcon(\"Users\", [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }],\n  [\"path\", { d: \"M22 21v-2a4 4 0 0 0-3-3.87\", key: \"kshegd\" }],\n  [\"path\", { d: \"M16 3.13a4 4 0 0 1 0 7.75\", key: \"1da9ce\" }]\n]);\n\nexport { Users as default };\n//# sourceMappingURL=users.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst X = createLucideIcon(\"X\", [\n  [\"path\", { d: \"M18 6 6 18\", key: \"1bl5f8\" }],\n  [\"path\", { d: \"m6 6 12 12\", key: \"d8bk6v\" }]\n]);\n\nexport { X as default };\n//# sourceMappingURL=x.mjs.map\n","import React, { useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport { useTheme } from '../../context/ThemeContext'\nimport { \n  Home, \n  Building2, \n  BarChart3, \n  Menu, \n  X, \n  Sun, \n  Moon,\n  Search,\n  Filter,\n  Stethoscope,\n  GraduationCap,\n  Target\n} from 'lucide-react'\n\nconst Layout = ({ children }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const { isDark, toggleTheme } = useTheme()\n  const location = useLocation()\n\n  const navigation = [\n    { name: 'Dashboard', href: '/', icon: Home },\n    { name: 'Colleges', href: '/colleges', icon: Building2 },\n    { name: 'Medical Seats', href: '/medical-seats', icon: Stethoscope },\n    { name: 'Counselling Data', href: '/counselling-data', icon: GraduationCap },\n    { name: 'Cutoff Ranks', href: '/cutoff-ranks', icon: Target },\n    { name: 'Analytics', href: '/analytics', icon: BarChart3 },\n  ]\n\n  const isActive = (path) => location.pathname === path\n\n  return (\n    <div className=\"flex h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* Clean Sidebar */}\n      <div className={`fixed inset-y-0 left-0 z-50 w-64 bg-white dark:bg-gray-800 shadow-lg transform transition-transform duration-300 ease-in-out ${\n        sidebarOpen ? 'translate-x-0' : '-translate-x-full'\n      } lg:translate-x-0 lg:static lg:inset-0`}>\n        <div className=\"flex items-center justify-between h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n          <h1 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n            🏥 MedCounsel\n          </h1>\n          <button\n            onClick={() => setSidebarOpen(false)}\n            className=\"lg:hidden p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700\"\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        <nav className=\"mt-6 px-3\">\n          <div className=\"space-y-1\">\n            {navigation.map((item) => {\n              const Icon = item.icon\n              return (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={`group flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors duration-200 ${\n                    isActive(item.href)\n                      ? 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-200'\n                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-white'\n                  }`}\n                  onClick={() => setSidebarOpen(false)}\n                >\n                  <Icon className=\"mr-3 h-5 w-5\" />\n                  {item.name}\n                </Link>\n              )\n            })}\n          </div>\n        </nav>\n\n        {/* Theme Toggle */}\n        <div className=\"absolute bottom-6 left-6 right-6\">\n          <button\n            onClick={toggleTheme}\n            className=\"w-full flex items-center justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 dark:text-gray-200 dark:bg-gray-700 dark:border-gray-600 dark:hover:bg-gray-600 transition-colors duration-200\"\n          >\n            {isDark ? (\n              <>\n                <Sun className=\"mr-2 h-4 w-4\" />\n                Light Mode\n              </>\n            ) : (\n              <>\n                <Moon className=\"mr-2 h-4 w-4\" />\n                Dark Mode\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        {/* Clean Top Navigation */}\n        <header className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center justify-between h-16 px-6\">\n            <button\n              onClick={() => setSidebarOpen(true)}\n              className=\"lg:hidden p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700\"\n            >\n              <Menu className=\"h-6 w-6\" />\n            </button>\n\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search colleges...\"\n                  className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:placeholder-gray-400\"\n                />\n              </div>\n              \n              <button className=\"p-2 text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-md\">\n                <Filter className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        </header>\n\n        {/* Page Content */}\n        <main className=\"flex-1 overflow-y-auto bg-gray-50 dark:bg-gray-900\">\n          <div className=\"py-6 px-6\">\n            {children}\n          </div>\n        </main>\n      </div>\n\n      {/* Mobile Overlay */}\n      {sidebarOpen && (\n        <div\n          className=\"fixed inset-0 z-40 bg-gray-600 bg-opacity-75 lg:hidden\"\n          onClick={() => setSidebarOpen(false)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Layout\n","import React, { useState, useEffect } from 'react'\nimport { \n  Building2, \n  Users, \n  MapPin, \n  Calendar,\n  TrendingUp,\n  Award,\n  Stethoscope,\n  GraduationCap,\n  Target,\n  Database,\n  Zap,\n  Shield,\n  Star,\n  Activity,\n  BarChart3,\n  Search,\n  Filter,\n  ArrowRight,\n  CheckCircle,\n  AlertCircle,\n  Info,\n  Heart,\n  Loader2\n} from 'lucide-react'\n\nconst Dashboard = () => {\n  const [stats, setStats] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedStream, setSelectedStream] = useState('')\n  const [selectedCourse, setSelectedCourse] = useState('')\n  const [selectedState, setSelectedState] = useState('')\n  const [searchResults, setSearchResults] = useState([])\n  const [groupedResults, setGroupedResults] = useState([])\n  const [searching, setSearching] = useState(false)\n  const [showResults, setShowResults] = useState(false)\n  const [suggestions, setSuggestions] = useState([])\n  const [showSuggestions, setShowSuggestions] = useState(false)\n  const [recentSearches, setRecentSearches] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [resultsPerPage] = useState(12)\n  const [dropdownData, setDropdownData] = useState({\n    streams: [],\n    courses: [],\n    states: []\n  })\n  const [loadingDropdowns, setLoadingDropdowns] = useState(false)\n  const [loadingSuggestions, setLoadingSuggestions] = useState(false)\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const response = await fetch('/api/stats')\n        const data = await response.json()\n        setStats(data)\n      } catch (err) {\n        setError('Failed to fetch statistics')\n        console.error('Error fetching stats:', err)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    const fetchDropdownData = async () => {\n      try {\n        setLoadingDropdowns(true)\n        \n        // Fetch streams\n        const streamsResponse = await fetch('/api/dropdown/streams')\n        const streamsData = await streamsResponse.json()\n        \n        // Fetch courses\n        const coursesResponse = await fetch('/api/dropdown/courses')\n        const coursesData = await coursesResponse.json()\n        \n        // Fetch states\n        const statesResponse = await fetch('/api/dropdown/states')\n        const statesData = await statesResponse.json()\n        \n        setDropdownData({\n          streams: streamsData.success ? streamsData.data : [],\n          courses: coursesData.success ? coursesData.data : [],\n          states: statesData.success ? statesData.data : []\n        })\n      } catch (err) {\n        console.error('Error fetching dropdown data:', err)\n      } finally {\n        setLoadingDropdowns(false)\n      }\n    }\n\n    fetchStats()\n    fetchDropdownData()\n    \n    // Load recent searches from localStorage\n    const saved = localStorage.getItem('recentSearches')\n    if (saved) {\n      setRecentSearches(JSON.parse(saved))\n    }\n  }, [])\n\n  const handleSearch = async (query) => {\n    // Handle both string parameters and event objects\n    let searchQuery;\n    if (typeof query === 'string') {\n      searchQuery = query.trim();\n    } else if (query && query.target && query.target.value) {\n      searchQuery = query.target.value.trim();\n    } else {\n      searchQuery = searchTerm.trim();\n    }\n    \n    if (!searchQuery) return\n    \n    console.log('🔍 Starting search for:', searchQuery)\n    setSearching(true)\n    setShowResults(true)\n    setShowSuggestions(false)\n    \n    try {\n      // Use comprehensive search for better results\n      const endpoint = '/api/search/comprehensive'\n      const params = new URLSearchParams({\n        query: searchQuery,\n        limit: '100'\n      })\n      \n      // Add advanced filters if they're set\n      if (selectedCourse) params.append('courseType', selectedCourse)\n      if (selectedState) params.append('state', selectedState)\n      if (selectedStream) params.append('stream', selectedStream)\n      \n      // Store the search term for display\n      setSearchTerm(searchQuery)\n      \n      const url = `${endpoint}?${params.toString()}`\n      \n      console.log('🌐 Making request to:', url)\n      \n      const response = await fetch(url)\n      const data = await response.json()\n      \n      console.log('📊 Search response:', data)\n      console.log('📊 Response total:', data.total)\n      console.log('📊 Response groupedResults:', data.groupedResults)\n      console.log('📊 Response groupedResults length:', data.groupedResults?.length)\n      \n      if (data && data.total > 0) {\n        // Comprehensive search returns grouped results in data.data\n        if (data.data && Array.isArray(data.data) && data.data.length > 0) {\n          console.log('✅ Setting grouped results:', data.data.length)\n          setGroupedResults(data.data)\n          setSearchResults([]) // Clear individual results since we have grouped ones\n          console.log('✅ Comprehensive search successful, grouped results:', data.data.length)\n        } else if (data.groupedResults && Array.isArray(data.groupedResults)) {\n          // Fallback to groupedResults if data.data is not available\n          console.log('✅ Setting grouped results from groupedResults:', data.groupedResults.length)\n          setGroupedResults(data.groupedResults)\n          setSearchResults([])\n          console.log('✅ Comprehensive search successful, grouped results:', data.groupedResults.length)\n        } else {\n          // Fallback to individual results if no grouped results\n          console.log('✅ Setting individual results:', data.data?.length || 0)\n          setSearchResults(data.data || [])\n          setGroupedResults([])\n          console.log('✅ Comprehensive search successful, individual results:', data.data?.length || 0)\n        }\n        \n        // Store in recent searches\n        const newSearch = {\n          query: searchQuery,\n          timestamp: new Date().toISOString(),\n          resultCount: data.total\n        }\n        \n        setRecentSearches(prev => {\n          const filtered = prev.filter(s => s.query !== searchQuery)\n          return [newSearch, ...filtered].slice(0, 10)\n        })\n        \n        console.log('✅ Search successful, total results:', data.total)\n        console.log('✅ State after search - groupedResults:', data.groupedResults?.length || 0)\n        console.log('✅ State after search - searchResults:', data.data?.length || 0)\n      } else {\n        console.log('❌ No results found - data.total:', data.total)\n        console.log('❌ No results found - data.groupedResults:', data.groupedResults)\n        setSearchResults([])\n        setGroupedResults([])\n      }\n    } catch (error) {\n      console.error('❌ Search error:', error)\n      setSearchResults([])\n      setGroupedResults([])\n    } finally {\n      setSearching(false)\n    }\n  }\n\n  const handleInputChange = async (e) => {\n    const value = e.target.value\n    setSearchTerm(value)\n    \n    // Clear suggestions immediately for better UX\n    if (value.length < 2) {\n      setShowSuggestions(false)\n      setSuggestions([])\n      return\n    }\n    \n    // Debounce API calls to reduce lag\n    clearTimeout(window.suggestionTimeout)\n    window.suggestionTimeout = setTimeout(async () => {\n      try {\n        setLoadingSuggestions(true)\n        const response = await fetch(`/api/search/suggestions?q=${encodeURIComponent(value)}`)\n        const data = await response.json()\n        if (data.success && data.data) {\n          setSuggestions(data.data)\n          setShowSuggestions(true)\n        }\n      } catch (error) {\n        console.error('Error fetching suggestions:', error)\n      } finally {\n        setLoadingSuggestions(false)\n      }\n    }, 300) // 300ms delay\n  }\n\n  const handleSuggestionClick = (suggestion) => {\n    const suggestionValue = suggestion.value || suggestion.display || suggestion.name || ''\n    if (suggestionValue) {\n      setSearchTerm(suggestionValue)\n      setShowSuggestions(false)\n      handleSearch(suggestionValue)\n    }\n  }\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch()\n    }\n  }\n\n  const handleQuickFilter = (filter) => {\n    setSelectedStream(filter.stream || '')\n    setSelectedCourse(filter.course || '')\n    setSelectedState(filter.state || '')\n    // Search for the filter name instead of searchTerm\n    setCurrentPage(1) // Reset to first page for new search\n    handleSearch(filter.name)\n  }\n\n  const handleStreamChange = async (stream) => {\n    setSelectedStream(stream)\n    setSelectedCourse('') // Reset course when stream changes\n    \n    if (stream) {\n      try {\n        const response = await fetch(`/api/dropdown/courses?stream=${encodeURIComponent(stream)}`)\n        const data = await response.json()\n        if (data.success) {\n          setDropdownData(prev => ({\n            ...prev,\n            courses: data.data\n          }))\n        }\n      } catch (err) {\n        console.error('Error fetching courses for stream:', err)\n      }\n    } else {\n      // If no stream selected, fetch all courses\n      try {\n        const response = await fetch('/api/dropdown/courses')\n        const data = await response.json()\n        if (data.success) {\n          setDropdownData(prev => ({\n            ...prev,\n            courses: data.data\n          }))\n        }\n      } catch (err) {\n        console.error('Error fetching all courses:', err)\n      }\n    }\n  }\n\n  // Pagination logic\n  const totalPages = Math.ceil((groupedResults.length > 0 ? groupedResults.length : searchResults.length) / resultsPerPage)\n  const startIndex = (currentPage - 1) * resultsPerPage\n  const endIndex = startIndex + resultsPerPage\n  const currentResults = groupedResults.length > 0 \n    ? groupedResults.slice(startIndex, endIndex)\n    : searchResults.slice(startIndex, endIndex)\n\n  const goToPage = (page) => {\n    setCurrentPage(page)\n    window.scrollTo({ top: 0, behavior: 'smooth' })\n  }\n\n  const popularSearches = [\n    { name: 'MBBS in Karnataka', stream: 'medical', course: 'mbbs', state: 'karnataka' },\n    { name: 'BDS Colleges', stream: 'dental', course: 'bds' },\n    { name: 'DNB Hospitals', stream: 'dnb' },\n    { name: 'Government Medical Colleges', stream: 'medical' },\n    { name: 'Private Dental Colleges', stream: 'dental' }\n  ]\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <Loader2 className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto mb-4\" />\n          <p className=\"text-gray-600 dark:text-gray-400 text-lg\">Loading comprehensive statistics...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <AlertCircle className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\n          <p className=\"text-red-600 dark:text-red-400 text-lg\">{error}</p>\n        </div>\n      </div>\n    )\n  }\n\n  const data = stats || {}\n\n  return (\n    <div className=\"space-y-0 relative z-10\">\n      {/* Hero Section - Exact replica of the old static site */}\n      <section className=\"hero relative overflow-hidden bg-gradient-to-br from-gray-50 to-white dark:from-gray-800 dark:to-gray-900 pt-20 pb-20\">\n        <div className=\"hero-container grid grid-cols-1 lg:grid-cols-2 gap-16 items-center max-w-6xl mx-auto px-4\">\n          {/* Hero Content */}\n          <div className=\"hero-content\">\n            <h1 className=\"hero-title text-5xl font-bold mb-6 leading-tight\">\n              <span className=\"title-line block opacity-0 transform translate-y-8 animate-[slideUp_0.8s_ease_forwards]\">\n                Discover Your Perfect\n              </span>\n              <span className=\"title-line highlight block opacity-0 transform translate-y-8 animate-[slideUp_0.8s_ease_forwards_0.2s] bg-gradient-to-r from-indigo-500 to-emerald-500 bg-clip-text text-transparent\">\n                Medical Institution\n              </span>\n            </h1>\n            <p className=\"hero-subtitle text-xl mb-8 text-gray-600 dark:text-gray-400 leading-relaxed opacity-0 transform translate-y-5 animate-[slideUp_0.8s_ease_forwards_0.4s]\">\n              Explore {data.total || 0}+ colleges, \n              {data.totalSeats || 0}+ seats across India's premier medical, \n              dental, and DNB institutions.\n            </p>\n            <div className=\"hero-stats flex gap-8 opacity-0 transform translate-y-5 animate-[slideUp_0.8s_ease_forwards_0.6s]\">\n              <div className=\"stat-item text-center\">\n                <span className=\"stat-number text-4xl font-extrabold block mb-2\">\n                  {data.total || 0}\n                </span>\n                <span className=\"stat-label text-sm opacity-80 uppercase tracking-wider\">Colleges</span>\n              </div>\n              <div className=\"stat-item text-center\">\n                <span className=\"stat-number text-4xl font-extrabold block mb-2\">\n                  {data.totalSeats || 0}\n                </span>\n                <span className=\"stat-label text-sm opacity-80 uppercase tracking-wider\">Seats</span>\n              </div>\n              <div className=\"stat-item text-center\">\n                <span className=\"stat-number text-4xl font-extrabold block mb-2\">\n                  {data.byType ? data.byType.length : 0}\n                </span>\n                <span className=\"stat-label text-sm opacity-80 uppercase tracking-wider\">Streams</span>\n              </div>\n            </div>\n          </div>\n          \n          {/* Hero Visual - Floating Cards - Exact replica */}\n          <div className=\"hero-visual flex justify-center items-center opacity-0 transform translate-x-8 animate-[slideInRight_0.8s_ease_forwards_0.8s]\">\n            <div className=\"floating-cards relative w-80 h-80\">\n              <div className=\"card medical absolute top-0 left-1/2 transform -translate-x-1/2 w-32 h-32 bg-gradient-to-br from-red-500 to-red-600 text-white rounded-2xl flex flex-col items-center justify-center gap-2 shadow-2xl transition-all duration-300 animate-[float_6s_ease-in-out_infinite] hover:translate-y-[-10px] hover:scale-105\">\n                <Heart className=\"h-8 w-8\" />\n                <span className=\"text-sm font-semibold uppercase tracking-wider\">Medical</span>\n              </div>\n              <div className=\"card dental absolute bottom-0 left-0 w-32 h-32 bg-gradient-to-br from-emerald-500 to-emerald-600 text-white rounded-2xl flex flex-col items-center justify-center gap-2 shadow-2xl transition-all duration-300 animate-[float_6s_ease-in-out_infinite_2s] hover:translate-y-[-10px] hover:scale-105\">\n                <Stethoscope className=\"h-8 w-8\" />\n                <span className=\"text-sm font-semibold uppercase tracking-wider\">Dental</span>\n              </div>\n              <div className=\"card dnb absolute bottom-0 right-0 w-32 h-32 bg-gradient-to-br from-indigo-500 to-indigo-600 text-white rounded-2xl flex flex-col items-center justify-center gap-2 shadow-2xl transition-all duration-300 animate-[float_6s_ease-out_infinite_4s] hover:translate-y-[-10px] hover:scale-105\">\n                <Building2 className=\"h-8 w-8\" />\n                <span className=\"text-sm font-semibold uppercase tracking-wider\">DNB</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Search Section - Exact replica of the old static site */}\n      <section className=\"search-section py-20 bg-white dark:bg-gray-800 relative z-10\">\n        <div className=\"container max-w-6xl mx-auto px-4\">\n          <div className=\"search-header text-center mb-12 pt-8\">\n            <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n              Find Your Institution\n            </h2>\n            <p className=\"text-gray-600 dark:text-gray-400 text-lg\">\n              Search by name, course, state, or specialization\n            </p>\n          </div>\n          \n          <div className=\"search-box bg-white/10 backdrop-blur-xl border border-white/20 rounded-3xl p-8 mb-8 transition-all duration-400 shadow-2xl relative z-10 overflow-visible\">\n            <div className=\"search-input-group relative mb-6\">\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 h-6 w-6 text-gray-400\" />\n              <input \n                type=\"text\" \n                placeholder=\"Search for colleges, courses, or locations...\" \n                value={searchTerm}\n                onChange={handleInputChange}\n                onKeyPress={handleKeyPress}\n                className=\"w-full pl-12 pr-20 py-4 border-2 border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white text-lg\"\n              />\n              <button \n                onClick={handleSearch}\n                disabled={searching}\n                className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white p-3 rounded-lg transition-colors duration-200\"\n              >\n                {searching ? (\n                  <Loader2 className=\"h-5 w-5 animate-spin\" />\n                ) : (\n                  <ArrowRight className=\"h-5 w-5\" />\n                )}\n              </button>\n            </div>\n            \n            {showSuggestions && suggestions.length > 0 && (\n              <div className=\"search-suggestions bg-white dark:bg-gray-700 rounded-lg shadow-md p-3 mb-4\">\n                <h4 className=\"text-sm font-semibold text-gray-900 dark:text-white mb-2\">Suggestions:</h4>\n                <ul className=\"space-y-2\">\n                  {suggestions.map((suggestion, index) => (\n                    <li \n                      key={index} \n                      onClick={() => handleSuggestionClick(suggestion)}\n                      className=\"cursor-pointer text-gray-800 dark:text-gray-200 hover:bg-blue-100 dark:hover:bg-blue-900 p-2 rounded-md\"\n                    >\n                      {suggestion.name}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {/* Advanced Filters */}\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-4\">\n                <span className=\"text-sm font-gray-600 dark:text-gray-400\">Advanced Filters:</span>\n              </div>\n              \n              <div className=\"flex items-center space-x-4\">\n                {/* Stream Dropdown */}\n                <div className=\"flex flex-col\">\n                  <label className=\"text-xs text-gray-500 dark:text-gray-400 mb-1\">Stream</label>\n                  <select\n                    value={selectedStream}\n                    onChange={(e) => handleStreamChange(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white min-w-[120px]\"\n                    disabled={loadingDropdowns}\n                  >\n                    <option value=\"\">All Streams</option>\n                    {dropdownData.streams.map((stream) => (\n                      <option key={stream.value} value={stream.value}>\n                        {stream.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Course Dropdown */}\n                <div className=\"flex flex-col\">\n                  <label className=\"text-xs text-gray-500 dark:text-gray-400 mb-1\">Course</label>\n                  <select\n                    value={selectedCourse}\n                    onChange={(e) => setSelectedCourse(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white min-w-[140px]\"\n                    disabled={loadingDropdowns || !dropdownData.courses.length}\n                  >\n                    <option value=\"\">All Courses</option>\n                    {dropdownData.courses.map((course) => (\n                      <option key={course.value} value={course.value}>\n                        {course.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* State Dropdown */}\n                <div className=\"flex flex-col\">\n                  <label className=\"text-xs text-gray-500 dark:text-gray-400 mb-1\">State</label>\n                  <select\n                    value={selectedState}\n                    onChange={(e) => setSelectedState(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white min-w-[140px]\"\n                    disabled={loadingDropdowns}\n                  >\n                    <option value=\"\">All States</option>\n                    {dropdownData.states.map((state) => (\n                      <option key={state.value} value={state.value}>\n                        {state.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            {/* Popular Searches */}\n            <div className=\"popular-searches mb-6\">\n              <h4 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3\">Popular Searches:</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                {popularSearches.map((search, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handleQuickFilter(search)}\n                    className=\"px-3 py-2 bg-blue-100 hover:bg-blue-200 dark:bg-blue-900/30 dark:hover:bg-blue-900/50 text-blue-800 dark:text-blue-200 text-sm rounded-lg transition-colors duration-200\"\n                  >\n                    {search.name}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Recent Searches */}\n            {recentSearches.length > 0 && (\n              <div className=\"recent-searches mb-6\">\n                <h4 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3\">Recent Searches:</h4>\n                <div className=\"flex flex-wrap gap-2\">\n                  {recentSearches.map((search, index) => (\n                    <button\n                      key={index}\n                      onClick={() => handleSearch(search.query)}\n                      className=\"px-3 py-2 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 text-sm rounded-lg transition-colors duration-200\"\n                    >\n                      {search.query} ({search.resultCount} results)\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Search Results - Exact replica of port 3000 */}\n          {showResults && (\n            <div className=\"search-results bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\n              \n              <div className=\"results-header flex items-center justify-between mb-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                  Search Results\n                </h3>\n                <div className=\"results-count text-gray-600 dark:text-gray-400\">\n                  Found <span className=\"font-semibold\">\n                    {groupedResults.length > 0 ? groupedResults.length : searchResults.length}\n                  </span> results\n                </div>\n              </div>\n              \n              {searching ? (\n                <div className=\"text-center py-8\">\n                  <Loader2 className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2\" />\n                  <p className=\"text-gray-600 dark:text-gray-400\">Searching...</p>\n                </div>\n              ) : (groupedResults.length > 0 || searchResults.length > 0) ? (\n                <>\n                  {/* Show grouped results if available, otherwise show individual results */}\n                  {groupedResults.length > 0 ? (\n                    <div className=\"results-grid grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n                      {currentResults.map((group, index) => (\n                        <div key={index} className=\"result-card bg-white dark:bg-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-700 hover:shadow-lg transition-all duration-300\">\n                          {/* College Header */}\n                          <div className=\"flex items-start justify-between mb-4\">\n                            <div className=\"flex-1\">\n                              <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-2 leading-tight\">\n                                {group.college_name}\n                              </h3>\n                              <div className=\"flex items-center space-x-3 text-sm text-gray-600 dark:text-gray-400\">\n                                <span className=\"inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n                                  {(group.college_type || group.type || 'COLLEGE').toUpperCase()}\n                                </span>\n                                <span>📍 {group.state}</span>\n                                {group.city && <span>🏙️ {group.city}</span>}\n                              </div>\n                            </div>\n                            <div className=\"text-right\">\n                              <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                                {group.courses.length}\n                              </div>\n                              <div className=\"text-xs text-gray-500\">Courses</div>\n                            </div>\n                          </div>\n                          \n                          {/* Available Courses Dropdown */}\n                          <div className=\"mb-4\">\n                            <details className=\"group\">\n                              <summary className=\"flex items-center justify-between p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg cursor-pointer hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors\">\n                                <div className=\"flex items-center space-x-2\">\n                                  <GraduationCap className=\"h-4 w-4 text-blue-600 dark:text-blue-400\" />\n                                  <span className=\"text-sm font-semibold text-blue-800 dark:text-blue-200\">\n                                    Available Courses ({group.courses.length})\n                                  </span>\n                                </div>\n                                <div className=\"flex items-center space-x-2\">\n                                  <span className=\"text-sm text-blue-600 dark:text-blue-400 font-medium\">\n                                    {group.courses.reduce((total, course) => total + (course.seats || 0), 0)} total seats\n                                  </span>\n                                  <svg className=\"w-4 h-4 text-blue-600 dark:text-blue-400 transform group-open:rotate-180 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                                  </svg>\n                                </div>\n                              </summary>\n                              <div className=\"mt-2 space-y-2 max-h-48 overflow-y-auto\">\n                                {group.courses.map((course, courseIndex) => (\n                                  <div key={courseIndex} className=\"flex items-center justify-between p-2 bg-white dark:bg-gray-800 rounded-md border border-gray-200 dark:border-gray-600\">\n                                    <div className=\"flex items-center space-x-2\">\n                                      <span className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">\n                                        {course.course_name}\n                                      </span>\n                                      {course.course_type && course.course_type !== course.course_name && (\n                                        <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                                          ({course.course_type})\n                                        </span>\n                                      )}\n                                    </div>\n                                    <div className=\"flex items-center space-x-2\">\n                                      <span className=\"text-sm text-green-600 dark:text-green-400 font-medium\">\n                                        {course.seats || 0} seats\n                                      </span>\n                                      {course.quota_details && course.quota_details !== '{}' && (\n                                        <span className=\"text-xs text-blue-600 dark:text-blue-400\">\n                                          📊\n                                        </span>\n                                      )}\n                                    </div>\n                                  </div>\n                                ))}\n                              </div>\n                            </details>\n                          </div>\n                          \n                          {/* Address */}\n                          {group.address && (\n                            <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-600\">\n                              <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                                <span className=\"font-medium\">Address:</span> {group.address}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"results-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\n                      {currentResults.map((result, index) => (\n                        <div key={index} className=\"result-card bg-gray-50 dark:bg-gray-700 rounded-lg p-4 border border-gray-200 dark:border-gray-600 hover:shadow-md transition-shadow duration-200\">\n                          <div className=\"flex items-start justify-between mb-3\">\n                            <h4 className=\"font-semibold text-gray-900 dark:text-white text-sm leading-tight\">{result.name}</h4>\n                            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n                              {result.type}\n                            </span>\n                          </div>\n                          <div className=\"space-y-2 text-sm text-gray-600 dark:text-gray-400\">\n                            <p><span className=\"font-medium\">Course:</span> {result.course}</p>\n                            <p><span className=\"font-medium\">State:</span> {result.state}</p>\n                            <p><span className=\"font-medium\">Address:</span> {result.address}</p>\n                            {result.seats > 0 && (\n                              <p className=\"text-green-600 dark:text-green-400 font-medium\">\n                                {result.seats} seats available\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {/* Search Summary */}\n                  <div className=\"mb-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800\">\n                    <div className=\"text-center\">\n                      <h3 className=\"text-lg font-semibold text-blue-800 dark:text-blue-200 mb-2\">\n                        Search Results for \"{searchTerm}\"\n                      </h3>\n                      <div className=\"flex items-center justify-center space-x-4 text-sm text-blue-600 dark:text-blue-400\">\n                        <span className=\"flex items-center space-x-1\">\n                          <Building2 className=\"h-4 w-4\" />\n                          <span>{groupedResults.length > 0 ? groupedResults.length : searchResults.length} colleges found</span>\n                        </span>\n                        {selectedStream && (\n                          <span className=\"flex items-center space-x-1\">\n                            <Stethoscope className=\"h-4 w-4\" />\n                            <span>Stream: {selectedStream.toUpperCase()}</span>\n                          </span>\n                        )}\n                        {selectedCourse && (\n                          <span className=\"flex items-center space-x-1\">\n                            <GraduationCap className=\"h-4 w-4\" />\n                            <span>Course: {selectedCourse}</span>\n                          </span>\n                        )}\n                        {selectedState && (\n                          <span className=\"flex items-center space-x-1\">\n                            <MapPin className=\"h-4 w-4\" />\n                            <span>State: {selectedState}</span>\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Results Summary */}\n                  <div className=\"text-center text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                    {groupedResults.length > 0 ? (\n                      `Showing ${startIndex + 1}-${Math.min(endIndex, groupedResults.length)} of ${groupedResults.length} colleges`\n                    ) : (\n                      `Showing ${startIndex + 1}-${Math.min(endIndex, searchResults.length)} of ${searchResults.length} results`\n                    )}\n                  </div>\n                  \n                  {/* Pagination Controls */}\n                  {totalPages > 1 && (\n                    <div className=\"flex justify-center items-center space-x-2\">\n                      <button\n                        onClick={() => goToPage(currentPage - 1)}\n                        disabled={currentPage === 1}\n                        className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-600\"\n                      >\n                        Previous\n                      </button>\n                      \n                      {/* Smart Pagination with ellipsis */}\n                      {(() => {\n                        const pages = [];\n                        const maxVisiblePages = 7; // Show max 7 page numbers\n                        \n                        if (totalPages <= maxVisiblePages) {\n                          // If total pages is small, show all\n                          for (let i = 1; i <= totalPages; i++) {\n                            pages.push(i);\n                          }\n                        } else {\n                          // Smart pagination for large numbers\n                          if (currentPage <= 4) {\n                            // Near the beginning: show 1, 2, 3, 4, 5, ..., last\n                            for (let i = 1; i <= 5; i++) {\n                              pages.push(i);\n                            }\n                            pages.push('...');\n                            pages.push(totalPages);\n                          } else if (currentPage >= totalPages - 3) {\n                            // Near the end: show 1, ..., last-4, last-3, last-2, last-1, last\n                            pages.push(1);\n                            pages.push('...');\n                            for (let i = totalPages - 4; i <= totalPages; i++) {\n                              pages.push(i);\n                            }\n                          } else {\n                            // In the middle: show 1, ..., current-1, current, current+1, ..., last\n                            pages.push(1);\n                            pages.push('...');\n                            pages.push(currentPage - 1);\n                            pages.push(currentPage);\n                            pages.push(currentPage + 1);\n                            pages.push('...');\n                            pages.push(totalPages);\n                          }\n                        }\n                        \n                        return pages.map((page, index) => (\n                          <button\n                            key={index}\n                            onClick={() => typeof page === 'number' ? goToPage(page) : null}\n                            disabled={typeof page !== 'number'}\n                            className={`px-3 py-2 text-sm font-medium rounded-md ${\n                              page === currentPage\n                                ? 'bg-blue-600 text-white'\n                                : typeof page === 'number'\n                                ? 'text-gray-500 bg-white border border-gray-300 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-600'\n                                : 'text-gray-400 bg-transparent border-none cursor-default'\n                            }`}\n                          >\n                            {page}\n                          </button>\n                        ));\n                      })()}\n                      \n                      <button\n                        onClick={() => goToPage(currentPage + 1)}\n                        disabled={currentPage === totalPages}\n                        className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-600\"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  )}\n                </>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <Search className=\"h-12 w-12 text-gray-400 mx-auto mb-2\" />\n                  <p className=\"text-gray-600 dark:text-gray-400\">No results found</p>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-500\">Try adjusting your search terms or filters</p>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Quick Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto px-4 mb-8\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 hover:shadow-xl transition-shadow duration-300\">\n          <div className=\"flex items-center\">\n            <div className=\"p-3 bg-blue-100 dark:bg-blue-900/30 rounded-lg\">\n              <Stethoscope className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Medical Colleges</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {data.byType?.find(t => t.type === 'medical')?.count?.toLocaleString() || '0'}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 hover:shadow-xl transition-shadow duration-300\">\n          <div className=\"flex items-center\">\n            <div className=\"p-3 bg-green-100 dark:bg-green-900/30 rounded-lg\">\n              <GraduationCap className=\"h-6 w-6 text-green-600 dark:text-green-400\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Dental Colleges</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {data.byType?.find(t => t.type === 'dental')?.count?.toLocaleString() || '0'}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 hover:shadow-xl transition-shadow duration-300\">\n          <div className=\"flex items-center\">\n            <div className=\"p-3 bg-purple-100 dark:bg-purple-900/30 rounded-lg\">\n              <Target className=\"h-6 w-6 text-purple-600 dark:text-purple-400\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">DNB Colleges</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {data.byType?.find(t => t.type === 'dnb')?.count?.toLocaleString() || '0'}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 hover:shadow-xl transition-shadow duration-300\">\n          <div className=\"flex items-center\">\n            <div className=\"p-3 bg-orange-100 dark:bg-orange-900/30 rounded-lg\">\n              <BarChart3 className=\"h-6 w-6 text-orange-600 dark:text-orange-400\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Seats</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {data.totalSeats?.toLocaleString() || '0'}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Features Section */}\n      <section className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8 max-w-6xl mx-auto px-4\">\n        <div className=\"text-center mb-8\">\n          <h3 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">\n            Why Choose MedCounsel?\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400 text-lg max-w-3xl mx-auto\">\n            Your comprehensive platform for medical college counseling with advanced features and real-time data\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          <div className=\"text-center\">\n            <div className=\"p-4 bg-blue-100 dark:bg-blue-900/30 rounded-full w-16 h-16 mx-auto mb-4 flex items-center justify-center\">\n              <Search className=\"h-8 w-8 text-blue-600 dark:text-blue-400\" />\n            </div>\n            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">Advanced Search</h4>\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n              Find institutions by name, course, state, or specialization with intelligent filtering\n            </p>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"p-4 bg-green-100 dark:bg-green-900/30 rounded-full w-16 h-16 mx-auto mb-4 flex items-center justify-center\">\n              <Database className=\"h-8 w-8 text-green-600 dark:text-green-400\" />\n            </div>\n            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">Comprehensive Data</h4>\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n              Access detailed information about courses, seat availability, and institution details\n            </p>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"p-4 bg-purple-100 dark:bg-purple-900/30 rounded-full w-16 h-16 mx-auto mb-4 flex items-center justify-center\">\n              <Activity className=\"h-8 w-8 text-purple-600 dark:text-purple-400\" />\n            </div>\n            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">Real-time Updates</h4>\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n              Get up-to-date information about our database with live statistics and insights\n            </p>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default Dashboard\n","import React, { useState } from 'react'\nimport { useQuery } from 'react-query'\nimport { Search, Filter, Eye } from 'lucide-react'\n\nconst Colleges = () => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [filters, setFilters] = useState({\n    state: '',\n    management: '',\n    minSeats: '',\n    maxSeats: ''\n  })\n\n  const { data: collegesData, isLoading } = useQuery(\n    ['colleges', currentPage, searchTerm, filters],\n    async () => {\n      const params = new URLSearchParams({\n        page: currentPage,\n        limit: 50,\n        search: searchTerm,\n        ...filters\n      })\n      const response = await fetch(`/api/colleges?${params}`)\n      return response.json()\n    }\n  )\n\n  const handleFilterChange = (key, value) => {\n    setFilters(prev => ({ ...prev, [key]: value }))\n    setCurrentPage(1)\n  }\n\n  const handleSearch = (value) => {\n    setSearchTerm(value)\n    setCurrentPage(1)\n  }\n\n\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    )\n  }\n\n  const colleges = collegesData?.data || []\n  const pagination = collegesData?.pagination || {}\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n              Medical Colleges\n            </h1>\n            <p className=\"mt-2 text-gray-600 dark:text-gray-400\">\n              Browse and search through {pagination.totalRecords || 0} colleges across India\n            </p>\n          </div>\n\n        </div>\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n          {/* Search */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search colleges by name, city, or state...\"\n                value={searchTerm}\n                onChange={(e) => handleSearch(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              />\n            </div>\n          </div>\n\n          {/* State Filter */}\n          <div>\n            <select\n              value={filters.state}\n              onChange={(e) => handleFilterChange('state', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n            >\n              <option value=\"\">All States</option>\n              <option value=\"Delhi\">Delhi</option>\n              <option value=\"Maharashtra\">Maharashtra</option>\n              <option value=\"Karnataka\">Karnataka</option>\n              <option value=\"Tamil Nadu\">Tamil Nadu</option>\n              <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\n            </select>\n          </div>\n\n          {/* Management Filter */}\n          <div>\n            <select\n              value={filters.management}\n              onChange={(e) => handleFilterChange('management', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n            >\n              <option value=\"\">All Types</option>\n              <option value=\"Government\">Government</option>\n              <option value=\"Private\">Private</option>\n              <option value=\"Trust\">Trust</option>\n              <option value=\"Society\">Society</option>\n            </select>\n          </div>\n\n          {/* Seats Filter */}\n          <div>\n            <select\n              value={filters.minSeats}\n              onChange={(e) => handleFilterChange('minSeats', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n            >\n              <option value=\"\">All Seats</option>\n              <option value=\"100\">100+ Seats</option>\n              <option value=\"200\">200+ Seats</option>\n              <option value=\"500\">500+ Seats</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Results Summary */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4\">\n        <div className=\"flex items-center justify-between\">\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n            Showing {((pagination.currentPage - 1) * pagination.recordsPerPage) + 1} to{' '}\n            {Math.min(pagination.currentPage * pagination.recordsPerPage, pagination.totalRecords)} of{' '}\n            {pagination.totalRecords} colleges\n          </p>\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n            Page {pagination.currentPage} of {pagination.totalPages}\n          </p>\n        </div>\n      </div>\n\n      {/* Colleges List */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead className=\"bg-gray-50 dark:bg-gray-700\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  College Name\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Location\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Type\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Seats\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Established\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n              {colleges.map((college) => (\n                <tr key={college._row_index} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        {college.college_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {college.courses_offered}\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900 dark:text-white\">{college.city}</div>\n                    <div className=\"text-sm text-gray-500 dark:text-gray-400\">{college.state}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                      college.management_type === 'Government' \n                        ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\n                        : college.management_type === 'Private'\n                        ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200'\n                        : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200'\n                    }`}>\n                      {college.management_type}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                    {college.total_seats}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                    {college.establishment_year}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                    <button className=\"text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300\">\n                      <Eye className=\"h-4 w-4\" />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Pagination */}\n      {pagination.totalPages > 1 && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={() => setCurrentPage(pagination.currentPage - 1)}\n                disabled={!pagination.hasPrevPage}\n                className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300\"\n              >\n                Previous\n              </button>\n              <span className=\"text-sm text-gray-700 dark:text-gray-300\">\n                Page {pagination.currentPage} of {pagination.totalPages}\n              </span>\n              <button\n                onClick={() => setCurrentPage(pagination.currentPage + 1)}\n                disabled={!pagination.hasNextPage}\n                className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Colleges\n","import React from 'react'\nimport { useQuery } from 'react-query'\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, LineChart, Line } from 'recharts'\n\nconst Analytics = () => {\n  const { data: analytics, isLoading } = useQuery('analytics', async () => {\n    const response = await fetch('/api/analytics/dashboard')\n    return response.json()\n  })\n\n  const { data: trends, isLoading: trendsLoading } = useQuery('trends', async () => {\n    const response = await fetch('/api/analytics/trends')\n    return response.json()\n  })\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82ca9d', '#ffc658', '#8dd1e1']\n\n  if (isLoading || trendsLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    )\n  }\n\n  const analyticsData = analytics?.data || {}\n  const trendsData = trends?.data || {}\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n          Analytics & Insights\n        </h1>\n        <p className=\"mt-2 text-gray-600 dark:text-gray-400\">\n          Deep dive into medical college data and trends\n        </p>\n      </div>\n\n      {/* Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Total Colleges</h3>\n          <p className=\"text-3xl font-bold text-blue-600 dark:text-blue-400\">\n            {analyticsData.overview?.totalColleges?.toLocaleString() || '0'}\n          </p>\n        </div>\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Total Seats</h3>\n          <p className=\"text-3xl font-bold text-green-600 dark:text-green-400\">\n            {analyticsData.overview?.totalSeats?.toLocaleString() || '0'}\n          </p>\n        </div>\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">States Covered</h3>\n          <p className=\"text-3xl font-bold text-purple-600 dark:text-purple-400\">\n            {analyticsData.overview?.statesCovered || '0'}\n          </p>\n        </div>\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Cities Covered</h3>\n          <p className=\"text-3xl font-bold text-orange-600 dark:text-orange-400\">\n            {analyticsData.overview?.citiesCovered || '0'}\n          </p>\n        </div>\n      </div>\n\n      {/* Charts Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Management Distribution */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Management Type Distribution\n          </h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <PieChart>\n              <Pie\n                data={Object.entries(analyticsData.charts?.managementDistribution || {}).map(([key, value]) => ({\n                  name: key,\n                  value\n                }))}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                outerRadius={80}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n              >\n                {Object.entries(analyticsData.charts?.managementDistribution || {}).map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n              <Tooltip />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Top States */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Top States by College Count\n          </h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={analyticsData.charts?.stateDistribution || []}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"state\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"count\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Establishment Timeline */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            College Establishment by Decade\n          </h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={analyticsData.charts?.decadeDistribution || []}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"decade\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"count\" fill=\"#00C49F\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Top Courses */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Top Courses Offered\n          </h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={analyticsData.charts?.courseDistribution || []}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"course\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"count\" fill=\"#FFBB28\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n\n      {/* Trends Analysis */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n          Establishment Trends Over Time\n        </h3>\n        <ResponsiveContainer width=\"100%\" height={400}>\n          <LineChart data={trendsData.yearTrends || []}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"year\" />\n            <YAxis />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"colleges\" stroke=\"#8884d8\" strokeWidth={2} />\n            <Line type=\"monotone\" dataKey=\"seats\" stroke=\"#82ca9d\" strokeWidth={2} />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n\n      {/* Regional Analysis */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n          Regional Analysis\n        </h3>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead className=\"bg-gray-50 dark:bg-gray-700\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  State\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Colleges\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Total Seats\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Management Types\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n              {(trendsData.regionalAnalysis || []).map((region, index) => (\n                <tr key={index} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n                    {region.state}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                    {region.colleges}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                    {region.seats.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    {Object.entries(region.types || {}).map(([type, count]) => (\n                      <span key={type} className=\"inline-block bg-gray-100 dark:bg-gray-700 rounded-full px-2 py-1 text-xs mr-1 mb-1\">\n                        {type}: {count}\n                      </span>\n                    ))}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Analytics\n","import React, { useState, useEffect } from 'react';\nimport { \n    Search, \n    Filter, \n    MapPin, \n    GraduationCap, \n    Users, \n    Building2,\n    TrendingUp,\n    Calendar,\n    BookOpen\n} from 'lucide-react';\n\nconst MedicalSeats = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [filters, setFilters] = useState({\n        state: '',\n        college_type: '',\n        course_name: '',\n        quota: '',\n        limit: 100\n    });\n    const [searchTerm, setSearchTerm] = useState('');\n    const [stats, setStats] = useState(null);\n\n    // Fetch medical seats data\n    const fetchMedicalSeats = async () => {\n        try {\n            setLoading(true);\n            const queryParams = new URLSearchParams(filters);\n            const response = await fetch(`/api/medical-seats?${queryParams}`);\n            \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            \n            const result = await response.json();\n            setData(result.data);\n            setError(null);\n        } catch (err) {\n            setError(err.message);\n            console.error('Error fetching medical seats:', err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Fetch statistics\n    const fetchStats = async () => {\n        try {\n            const response = await fetch('/api/comprehensive-stats');\n            if (response.ok) {\n                const result = await response.json();\n                setStats(result.medical);\n            }\n        } catch (err) {\n            console.error('Error fetching stats:', err);\n        }\n    };\n\n    // Handle filter changes\n    const handleFilterChange = (key, value) => {\n        setFilters(prev => ({\n            ...prev,\n            [key]: value\n        }));\n    };\n\n    // Apply filters\n    const applyFilters = () => {\n        fetchMedicalSeats();\n    };\n\n    // Reset filters\n    const resetFilters = () => {\n        setFilters({\n            state: '',\n            college_type: '',\n            course_name: '',\n            quota: '',\n            limit: 100\n        });\n        setSearchTerm('');\n    };\n\n    // Search functionality\n    const handleSearch = () => {\n        if (searchTerm.trim()) {\n            setFilters(prev => ({\n                ...prev,\n                course_name: searchTerm.trim()\n            }));\n        }\n    };\n\n    // Load data on component mount\n    useEffect(() => {\n        fetchMedicalSeats();\n        fetchStats();\n    }, []);\n\n    // Load data when filters change\n    useEffect(() => {\n        fetchMedicalSeats();\n    }, [filters]);\n\n    if (loading && !data.length) {\n        return (\n            <div className=\"flex items-center justify-center min-h-screen\">\n                <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800 p-6\">\n            <div className=\"max-w-7xl mx-auto\">\n                {/* Header */}\n                <div className=\"mb-8\">\n                    <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-2\">\n                        🏥 Medical Seats Database\n                    </h1>\n                    <p className=\"text-lg text-gray-600 dark:text-gray-300\">\n                        Comprehensive information about medical courses, seats, and admission details\n                    </p>\n                </div>\n\n                {/* Statistics Cards */}\n                {stats && (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6 mb-8\">\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\n                                    <BookOpen className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Records</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.total_records?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\">\n                                    <Building2 className=\"h-6 w-6 text-green-600 dark:text-green-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Colleges</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.unique_colleges?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-purple-100 dark:bg-purple-900 rounded-lg\">\n                                    <GraduationCap className=\"h-6 w-6 text-purple-600 dark:text-purple-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Courses</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.unique_courses?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-orange-100 dark:bg-orange-900 rounded-lg\">\n                                    <Users className=\"h-6 w-6 text-orange-600 dark:text-orange-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Seats</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.total_seats?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-red-100 dark:bg-red-900 rounded-lg\">\n                                    <TrendingUp className=\"h-6 w-6 text-red-600 dark:text-red-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Quota Types</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.quota_types?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* Search and Filters */}\n                <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700 mb-8\">\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                        {/* Search */}\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                Search Courses\n                            </label>\n                            <div className=\"relative\">\n                                <input\n                                    type=\"text\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                    placeholder=\"Search for courses...\"\n                                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                />\n                                <Search className=\"absolute left-3 top-2.5 h-5 w-5 text-gray-400\" />\n                            </div>\n                            <button\n                                onClick={handleSearch}\n                                className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                            >\n                                Search\n                            </button>\n                        </div>\n\n                        {/* Filters */}\n                        <div className=\"grid grid-cols-2 gap-4\">\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    State\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    value={filters.state}\n                                    onChange={(e) => handleFilterChange('state', e.target.value)}\n                                    placeholder=\"Enter state...\"\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    College Type\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    value={filters.college_type}\n                                    onChange={(e) => handleFilterChange('college_type', e.target.value)}\n                                    placeholder=\"Enter type...\"\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    Quota\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    value={filters.quota}\n                                    onChange={(e) => handleFilterChange('quota', e.target.value)}\n                                    placeholder=\"Enter quota...\"\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    Limit\n                                </label>\n                                <select\n                                    value={filters.limit}\n                                    onChange={(e) => handleFilterChange('limit', parseInt(e.target.value))}\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                >\n                                    <option value={50}>50</option>\n                                    <option value={100}>100</option>\n                                    <option value={200}>200</option>\n                                    <option value={500}>500</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"flex gap-4 mt-6\">\n                        <button\n                            onClick={applyFilters}\n                            className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n                        >\n                            <Filter className=\"h-4 w-4\" />\n                            Apply Filters\n                        </button>\n                        <button\n                            onClick={resetFilters}\n                            className=\"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n                        >\n                            Reset\n                        </button>\n                    </div>\n                </div>\n\n                {/* Results */}\n                <div className=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg border border-gray-200 dark:border-slate-700\">\n                    <div className=\"px-6 py-4 border-b border-gray-200 dark:border-slate-700\">\n                        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                            Medical Seats ({data.length} results)\n                        </h2>\n                    </div>\n\n                    {error && (\n                        <div className=\"p-6 text-center\">\n                            <div className=\"text-red-600 dark:text-red-400 text-lg\">\n                                Error: {error}\n                            </div>\n                        </div>\n                    )}\n\n                    {!error && data.length === 0 && !loading && (\n                        <div className=\"p-6 text-center\">\n                            <div className=\"text-gray-500 dark:text-gray-400 text-lg\">\n                                No medical seats found matching your criteria\n                            </div>\n                        </div>\n                    )}\n\n                    {!error && data.length > 0 && (\n                        <div className=\"overflow-x-auto\">\n                            <table className=\"w-full\">\n                                <thead className=\"bg-gray-50 dark:bg-slate-700\">\n                                    <tr>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            College\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Course\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Seats\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Quota\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            State\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Type\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody className=\"bg-white dark:bg-slate-800 divide-y divide-gray-200 dark:divide-slate-700\">\n                                    {data.map((item, index) => (\n                                        <tr key={index} className=\"hover:bg-gray-50 dark:hover:bg-slate-700 transition-colors\">\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <Building2 className=\"h-5 w-5 text-gray-400 mr-2\" />\n                                                    <div>\n                                                        <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                                                            {item.college_name || 'N/A'}\n                                                        </div>\n                                                        {item.address && (\n                                                            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                                                                {item.address}\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <GraduationCap className=\"h-5 w-5 text-gray-400 mr-2\" />\n                                                    <div className=\"text-sm text-gray-900 dark:text-white\">\n                                                        {item.course_name || 'N/A'}\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <Users className=\"h-5 w-5 text-gray-400 mr-2\" />\n                                                    <span className=\"text-sm text-gray-900 dark:text-white\">\n                                                        {item.seats || 0}\n                                                    </span>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n                                                    {item.quota || 'N/A'}\n                                                </span>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <MapPin className=\"h-5 w-5 text-gray-400 mr-2\" />\n                                                    <span className=\"text-sm text-gray-900 dark:text-white\">\n                                                        {item.state || 'N/A'}\n                                                    </span>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n                                                    {item.college_type || 'N/A'}\n                                                </span>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MedicalSeats;\n","import React, { useState, useEffect } from 'react';\nimport { \n    Search, \n    Filter, \n    MapPin, \n    GraduationCap, \n    Users, \n    Building2,\n    TrendingUp,\n    Calendar,\n    BookOpen,\n    Target,\n    Award,\n    Clock,\n    BarChart3\n} from 'lucide-react';\n\nconst CounsellingData = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [filters, setFilters] = useState({\n        counselling_type: '',\n        academic_year: '',\n        round_id: '',\n        college_name: '',\n        course_name: '',\n        quota: '',\n        category: '',\n        limit: 100\n    });\n    const [searchTerm, setSearchTerm] = useState('');\n    const [stats, setStats] = useState(null);\n    const [counsellingTypes, setCounsellingTypes] = useState([]);\n    const [rounds, setRounds] = useState([]);\n    const [years, setYears] = useState([]);\n\n    // Fetch counselling data\n    const fetchCounsellingData = async () => {\n        try {\n            setLoading(true);\n            const queryParams = new URLSearchParams(filters);\n            const response = await fetch(`/api/counselling-data?${queryParams}`);\n            \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            \n            const result = await response.json();\n            setData(result.data);\n            setError(null);\n        } catch (err) {\n            setError(err.message);\n            console.error('Error fetching counselling data:', err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Fetch statistics\n    const fetchStats = async () => {\n        try {\n            const response = await fetch('/api/comprehensive-stats');\n            if (response.ok) {\n                const result = await response.json();\n                setStats(result.counselling);\n            }\n        } catch (err) {\n            console.error('Error fetching stats:', err);\n        }\n    };\n\n    // Fetch metadata for filters\n    const fetchMetadata = async () => {\n        try {\n            // Fetch counselling types\n            const typesResponse = await fetch('/api/counselling-types');\n            if (typesResponse.ok) {\n                const typesData = await typesResponse.json();\n                setCounsellingTypes(typesData);\n            }\n\n            // Fetch rounds\n            const roundsResponse = await fetch('/api/counselling-rounds');\n            if (roundsResponse.ok) {\n                const roundsData = await roundsResponse.json();\n                setRounds(roundsData);\n            }\n\n            // Generate academic years (2020-2021 to 2024-2025)\n            const currentYear = new Date().getFullYear();\n            const yearsList = [];\n            for (let i = 2020; i <= currentYear; i++) {\n                yearsList.push(`${i}-${i + 1}`);\n            }\n            setYears(yearsList);\n\n        } catch (err) {\n            console.error('Error fetching metadata:', err);\n        }\n    };\n\n    // Handle filter changes\n    const handleFilterChange = (key, value) => {\n        setFilters(prev => ({\n            ...prev,\n            [key]: value\n        }));\n    };\n\n    // Apply filters\n    const applyFilters = () => {\n        fetchCounsellingData();\n    };\n\n    // Reset filters\n    const resetFilters = () => {\n        setFilters({\n            counselling_type: '',\n            academic_year: '',\n            round_id: '',\n            college_name: '',\n            course_name: '',\n            quota: '',\n            category: '',\n            limit: 100\n        });\n        setSearchTerm('');\n    };\n\n    // Search functionality\n    const handleSearch = () => {\n        if (searchTerm.trim()) {\n            setFilters(prev => ({\n                ...prev,\n                college_name: searchTerm.trim()\n            }));\n        }\n    };\n\n    // Load data on component mount\n    useEffect(() => {\n        fetchCounsellingData();\n        fetchStats();\n        fetchMetadata();\n    }, []);\n\n    // Load data when filters change\n    useEffect(() => {\n        fetchCounsellingData();\n    }, [filters]);\n\n    if (loading && !data.length) {\n        return (\n            <div className=\"flex items-center justify-center min-h-screen\">\n                <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800 p-6\">\n            <div className=\"max-w-7xl mx-auto\">\n                {/* Header */}\n                <div className=\"mb-8\">\n                    <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-2\">\n                        🎓 Counselling Data Database\n                    </h1>\n                    <p className=\"text-lg text-gray-600 dark:text-gray-300\">\n                        Comprehensive counselling information across all rounds, types, and academic years\n                    </p>\n                </div>\n\n                {/* Statistics Cards */}\n                {stats && (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\n                                    <BookOpen className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Records</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.total_records?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\">\n                                    <Target className=\"h-6 w-6 text-green-600 dark:text-green-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Counselling Types</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.counselling_types?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-purple-100 dark:bg-purple-900 rounded-lg\">\n                                    <Award className=\"h-6 w-6 text-purple-600 dark:text-purple-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Rounds</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.rounds?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-orange-100 dark:bg-orange-900 rounded-lg\">\n                                    <Calendar className=\"h-6 w-6 text-orange-600 dark:text-orange-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Academic Years</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.years?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* Search and Filters */}\n                <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700 mb-8\">\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                        {/* Search */}\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                Search Colleges\n                            </label>\n                            <div className=\"relative\">\n                                <input\n                                    type=\"text\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                    placeholder=\"Search for colleges...\"\n                                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                />\n                                <Search className=\"absolute left-3 top-2.5 h-5 w-5 text-gray-400\" />\n                            </div>\n                            <button\n                                onClick={handleSearch}\n                                className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                            >\n                                Search\n                            </button>\n                        </div>\n\n                        {/* Filters */}\n                        <div className=\"grid grid-cols-2 gap-4\">\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    Counselling Type\n                                </label>\n                                <select\n                                    value={filters.counselling_type}\n                                    onChange={(e) => handleFilterChange('counselling_type', e.target.value)}\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                >\n                                    <option value=\"\">All Types</option>\n                                    {counsellingTypes.map((type, index) => (\n                                        <option key={index} value={type.id}>{type.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    Academic Year\n                                </label>\n                                <select\n                                    value={filters.academic_year}\n                                    onChange={(e) => handleFilterChange('academic_year', e.target.value)}\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                >\n                                    <option value=\"\">All Years</option>\n                                    {years.map((year, index) => (\n                                        <option key={index} value={year}>{year}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    Round\n                                </label>\n                                <select\n                                    value={filters.round_id}\n                                    onChange={(e) => handleFilterChange('round_id', e.target.value)}\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                >\n                                    <option value=\"\">All Rounds</option>\n                                    {rounds.map((round, index) => (\n                                        <option key={index} value={round.id}>{round.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    Limit\n                                </label>\n                                <select\n                                    value={filters.limit}\n                                    onChange={(e) => handleFilterChange('limit', parseInt(e.target.value))}\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                >\n                                    <option value={50}>50</option>\n                                    <option value={100}>100</option>\n                                    <option value={200}>200</option>\n                                    <option value={500}>500</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-6\">\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                Course Name\n                            </label>\n                            <input\n                                type=\"text\"\n                                value={filters.course_name}\n                                onChange={(e) => handleFilterChange('course_name', e.target.value)}\n                                placeholder=\"Enter course name...\"\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                Quota\n                            </label>\n                            <input\n                                type=\"text\"\n                                value={filters.quota}\n                                onChange={(e) => handleFilterChange('quota', e.target.value)}\n                                placeholder=\"Enter quota...\"\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                Category\n                            </label>\n                            <input\n                                type=\"text\"\n                                value={filters.category}\n                                onChange={(e) => handleFilterChange('category', e.target.value)}\n                                placeholder=\"Enter category...\"\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"flex gap-4 mt-6\">\n                        <button\n                            onClick={applyFilters}\n                            className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n                        >\n                            <Filter className=\"h-4 w-4\" />\n                            Apply Filters\n                        </button>\n                        <button\n                            onClick={resetFilters}\n                            className=\"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n                        >\n                            Reset\n                        </button>\n                    </div>\n                </div>\n\n                {/* Results */}\n                <div className=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg border border-gray-200 dark:border-slate-700\">\n                    <div className=\"px-6 py-4 border-b border-gray-200 dark:border-slate-700\">\n                        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                            Counselling Data ({data.length} results)\n                        </h2>\n                    </div>\n\n                    {error && (\n                        <div className=\"p-6 text-center\">\n                            <div className=\"text-red-600 dark:text-red-400 text-lg\">\n                                Error: {error}\n                            </div>\n                        </div>\n                    )}\n\n                    {!error && data.length === 0 && !loading && (\n                        <div className=\"p-6 text-center\">\n                            <div className=\"text-gray-500 dark:text-gray-400 text-lg\">\n                                No counselling data found matching your criteria\n                            </div>\n                        </div>\n                    )}\n\n                    {!error && data.length > 0 && (\n                        <div className=\"overflow-x-auto\">\n                            <table className=\"w-full\">\n                                <thead className=\"bg-gray-50 dark:bg-slate-700\">\n                                    <tr>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            College\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Course\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Counselling Type\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Round\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Academic Year\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Quota\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Category\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            All India Rank\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Seats\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Fees\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody className=\"bg-white dark:bg-slate-800 divide-y divide-gray-200 dark:divide-slate-700\">\n                                    {data.map((item, index) => (\n                                        <tr key={index} className=\"hover:bg-gray-50 dark:hover:bg-slate-700 transition-colors\">\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <Building2 className=\"h-5 w-5 text-gray-400 mr-2\" />\n                                                    <div>\n                                                        <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                                                            {item.college_name || 'N/A'}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <GraduationCap className=\"h-5 w-5 text-gray-400 mr-2\" />\n                                                    <div className=\"text-sm text-gray-900 dark:text-white\">\n                                                        {item.course_name || 'N/A'}\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n                                                    {item.counselling_type_name || 'N/A'}\n                                                </span>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n                                                    {item.round_name || 'N/A'}\n                                                </span>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <Calendar className=\"h-4 w-4 text-gray-400 mr-2\" />\n                                                    <span className=\"text-sm text-gray-900 dark:text-white\">\n                                                        {item.academic_year || 'N/A'}\n                                                    </span>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200\">\n                                                    {item.quota || 'N/A'}\n                                                </span>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200\">\n                                                    {item.category || 'N/A'}\n                                                </span>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <Target className=\"h-4 w-4 text-gray-400 mr-2\" />\n                                                    <span className=\"text-sm text-gray-900 dark:text-white\">\n                                                        {item.all_india_rank || 'N/A'}\n                                                    </span>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <Users className=\"h-4 w-4 text-gray-400 mr-2\" />\n                                                    <span className=\"text-sm text-gray-900 dark:text-white\">\n                                                        {item.seats || 0}\n                                                    </span>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <TrendingUp className=\"h-4 w-4 text-gray-400 mr-2\" />\n                                                    <span className=\"text-sm text-gray-900 dark:text-white\">\n                                                        ₹{item.fees ? item.fees.toLocaleString() : '0'}\n                                                    </span>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CounsellingData;\n","import React, { useState, useEffect } from 'react';\nimport { \n    Search, \n    Filter, \n    MapPin, \n    GraduationCap, \n    Users, \n    Building2,\n    TrendingUp,\n    Calendar,\n    BookOpen,\n    Target,\n    Award,\n    Clock,\n    BarChart3,\n    Hash,\n    Star\n} from 'lucide-react';\n\nconst CutoffRanks = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [filters, setFilters] = useState({\n        counselling_type_id: '',\n        academic_year: '',\n        round_id: '',\n        college_name: '',\n        course_name: '',\n        quota: '',\n        category: '',\n        max_rank: '',\n        limit: 100\n    });\n    const [searchTerm, setSearchTerm] = useState('');\n    const [stats, setStats] = useState(null);\n\n    // Fetch cutoff ranks data\n    const fetchCutoffRanks = async () => {\n        try {\n            setLoading(true);\n            const queryParams = new URLSearchParams(filters);\n            const response = await fetch(`/api/cutoff-ranks-enhanced?${queryParams}`);\n            \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            \n            const result = await response.json();\n            setData(result.data);\n            setError(null);\n        } catch (err) {\n            setError(err.message);\n            console.error('Error fetching cutoff ranks:', err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Fetch statistics\n    const fetchStats = async () => {\n        try {\n            const response = await fetch('/api/comprehensive-stats');\n            if (response.ok) {\n                const result = await response.json();\n                setStats(result.cutoff);\n            }\n        } catch (err) {\n            console.error('Error fetching stats:', err);\n        }\n    };\n\n    // Handle filter changes\n    const handleFilterChange = (key, value) => {\n        setFilters(prev => ({\n            ...prev,\n            [key]: value\n        }));\n    };\n\n    // Apply filters\n    const applyFilters = () => {\n        fetchCutoffRanks();\n    };\n\n    // Reset filters\n    const resetFilters = () => {\n        setFilters({\n            counselling_type_id: '',\n            academic_year: '',\n            round_id: '',\n            college_name: '',\n            course_name: '',\n            quota: '',\n            category: '',\n            max_rank: '',\n            limit: 100\n        });\n        setSearchTerm('');\n    };\n\n    // Search functionality\n    const handleSearch = () => {\n        if (searchTerm.trim()) {\n            setFilters(prev => ({\n                ...prev,\n                college_name: searchTerm.trim()\n            }));\n        }\n    };\n\n    // Load data on component mount\n    useEffect(() => {\n        fetchCutoffRanks();\n        fetchStats();\n    }, []);\n\n    // Load data when filters change\n    useEffect(() => {\n        fetchCutoffRanks();\n    }, [filters]);\n\n    if (loading && !data.length) {\n        return (\n            <div className=\"flex items-center justify-center min-h-screen\">\n                <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800 p-6\">\n            <div className=\"max-w-7xl mx-auto\">\n                {/* Header */}\n                <div className=\"mb-8\">\n                    <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-2\">\n                        🎯 Cutoff Ranks Database\n                    </h1>\n                    <p className=\"text-lg text-gray-600 dark:text-gray-300\">\n                        Comprehensive cutoff rank information for medical admissions across all counselling rounds\n                    </p>\n                </div>\n\n                {/* Statistics Cards */}\n                {stats && (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6 mb-8\">\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\n                                    <BookOpen className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Records</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.total_records?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\">\n                                    <Target className=\"h-6 w-6 text-green-600 dark:text-green-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Counselling Types</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.counselling_types?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-purple-100 dark:bg-purple-900 rounded-lg\">\n                                    <Award className=\"h-6 w-6 text-purple-600 dark:text-purple-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Rounds</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.rounds?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-orange-100 dark:bg-orange-900 rounded-lg\">\n                                    <Calendar className=\"h-6 w-6 text-orange-600 dark:text-orange-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Academic Years</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.years?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-red-100 dark:bg-red-900 rounded-lg\">\n                                    <Hash className=\"h-6 w-6 text-red-600 dark:text-red-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Lowest Rank</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.lowest_rank?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* Additional Stats Row */}\n                {stats && (\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-yellow-100 dark:bg-yellow-900 rounded-lg\">\n                                    <Star className=\"h-6 w-6 text-yellow-600 dark:text-yellow-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Highest Rank</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.highest_rank?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-indigo-100 dark:bg-indigo-900 rounded-lg\">\n                                    <BarChart3 className=\"h-6 w-6 text-indigo-600 dark:text-indigo-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Average Rank</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.average_rank ? Math.round(stats.average_rank).toLocaleString() : 'N/A'}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700\">\n                            <div className=\"flex items-center\">\n                                <div className=\"p-2 bg-pink-100 dark:bg-pink-900 rounded-lg\">\n                                    <TrendingUp className=\"h-6 w-6 text-pink-600 dark:text-pink-400\" />\n                                </div>\n                                <div className=\"ml-4\">\n                                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Quota Types</p>\n                                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.quota_types?.toLocaleString()}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* Search and Filters */}\n                <div className=\"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg border border-gray-200 dark:border-slate-700 mb-8\">\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                        {/* Search */}\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                Search Colleges\n                            </label>\n                            <div className=\"relative\">\n                                <input\n                                    type=\"text\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                    placeholder=\"Search for colleges...\"\n                                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                />\n                                <Search className=\"absolute left-3 top-2.5 h-5 w-5 text-gray-400\" />\n                            </div>\n                            <button\n                                onClick={handleSearch}\n                                className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                            >\n                                Search\n                            </button>\n                        </div>\n\n                        {/* Filters */}\n                        <div className=\"grid grid-cols-2 gap-4\">\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    Counselling Type\n                                </label>\n                                <select\n                                    value={filters.counselling_type_id}\n                                    onChange={(e) => handleFilterChange('counselling_type_id', e.target.value)}\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                >\n                                    <option value=\"\">All Types</option>\n                                    <option value=\"1\">AIQ_PG</option>\n                                    <option value=\"2\">AIQ_UG</option>\n                                    <option value=\"3\">KEA</option>\n                                </select>\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    Academic Year\n                                </label>\n                                <select\n                                    value={filters.academic_year}\n                                    onChange={(e) => handleFilterChange('academic_year', e.target.value)}\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                >\n                                    <option value=\"\">All Years</option>\n                                    <option value=\"2020-2021\">2020-2021</option>\n                                    <option value=\"2021-2022\">2021-2022</option>\n                                    <option value=\"2022-2023\">2022-2023</option>\n                                    <option value=\"2023-2024\">2023-2024</option>\n                                    <option value=\"2024-2025\">2024-2025</option>\n                                </select>\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    Round\n                                </label>\n                                <select\n                                    value={filters.round_id}\n                                    onChange={(e) => handleFilterChange('round_id', e.target.value)}\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                >\n                                    <option value=\"\">All Rounds</option>\n                                    <option value=\"1\">R1</option>\n                                    <option value=\"2\">R2</option>\n                                    <option value=\"3\">R3</option>\n                                    <option value=\"4\">R4</option>\n                                    <option value=\"5\">R5</option>\n                                    <option value=\"6\">STRAY</option>\n                                    <option value=\"7\">SPECIAL_STRAY</option>\n                                    <option value=\"8\">MOPUP</option>\n                                    <option value=\"9\">EXTENDED_STRAY</option>\n                                    <option value=\"10\">STRAY_BDS</option>\n                                </select>\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    Limit\n                                </label>\n                                <select\n                                    value={filters.limit}\n                                    onChange={(e) => handleFilterChange('limit', parseInt(e.target.value))}\n                                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                                >\n                                    <option value={50}>50</option>\n                                    <option value={100}>100</option>\n                                    <option value={200}>200</option>\n                                    <option value={500}>500</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mt-6\">\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                Course Name\n                            </label>\n                            <input\n                                type=\"text\"\n                                value={filters.course_name}\n                                onChange={(e) => handleFilterChange('course_name', e.target.value)}\n                                placeholder=\"Enter course name...\"\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                Quota\n                            </label>\n                            <input\n                                type=\"text\"\n                                value={filters.quota}\n                                onChange={(e) => handleFilterChange('quota', e.target.value)}\n                                placeholder=\"Enter quota...\"\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                Category\n                            </label>\n                            <input\n                                type=\"text\"\n                                value={filters.category}\n                                onChange={(e) => handleFilterChange('category', e.target.value)}\n                                placeholder=\"Enter category...\"\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                            />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                Max Rank\n                            </label>\n                            <input\n                                type=\"number\"\n                                value={filters.max_rank}\n                                onChange={(e) => handleFilterChange('max_rank', e.target.value)}\n                                placeholder=\"Enter max rank...\"\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-slate-700 dark:text-white\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"flex gap-4 mt-6\">\n                        <button\n                            onClick={applyFilters}\n                            className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n                        >\n                            <Filter className=\"h-4 w-4\" />\n                            Apply Filters\n                        </button>\n                        <button\n                            onClick={resetFilters}\n                            className=\"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n                        >\n                            Reset\n                        </button>\n                    </div>\n                </div>\n\n                {/* Results */}\n                <div className=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg border border-gray-200 dark:border-slate-700\">\n                    <div className=\"px-6 py-4 border-b border-gray-200 dark:border-slate-700\">\n                        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                            Cutoff Ranks ({data.length} results)\n                        </h2>\n                    </div>\n\n                    {error && (\n                        <div className=\"p-6 text-center\">\n                            <div className=\"text-red-600 dark:text-red-400 text-lg\">\n                                Error: {error}\n                            </div>\n                        </div>\n                    )}\n\n                    {!error && data.length === 0 && !loading && (\n                        <div className=\"p-6 text-center\">\n                            <div className=\"text-gray-500 dark:text-gray-400 text-lg\">\n                                No cutoff ranks found matching your criteria\n                            </div>\n                        </div>\n                    )}\n\n                    {!error && data.length > 0 && (\n                        <div className=\"overflow-x-auto\">\n                            <table className=\"w-full\">\n                                <thead className=\"bg-gray-50 dark:bg-slate-700\">\n                                    <tr>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            College\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Course\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Counselling Type\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Round\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Academic Year\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Quota\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Category\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Cutoff Rank\n                                        </th>\n                                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                                            Seats Available\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody className=\"bg-white dark:bg-slate-800 divide-y divide-gray-200 dark:divide-slate-700\">\n                                    {data.map((item, index) => (\n                                        <tr key={index} className=\"hover:bg-gray-50 dark:hover:bg-slate-700 transition-colors\">\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <Building2 className=\"h-5 w-5 text-gray-400 mr-2\" />\n                                                    <div>\n                                                        <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                                                            {item.college_name || 'N/A'}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <GraduationCap className=\"h-5 w-5 text-gray-400 mr-2\" />\n                                                    <div className=\"text-sm text-gray-900 dark:text-white\">\n                                                        {item.course_name || 'N/A'}\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n                                                    {item.counselling_type_name || 'N/A'}\n                                                </span>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n                                                    {item.round_name || 'N/A'}\n                                                </span>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <Calendar className=\"h-4 w-4 text-gray-400 mr-2\" />\n                                                    <span className=\"text-sm text-gray-900 dark:text-white\">\n                                                        {item.academic_year || 'N/A'}\n                                                    </span>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200\">\n                                                    {item.quota || 'N/A'}\n                                                </span>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200\">\n                                                    {item.category || 'N/A'}\n                                                </span>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <Target className=\"h-4 w-4 text-gray-400 mr-2\" />\n                                                    <span className=\"text-sm font-bold text-gray-900 dark:text-white\">\n                                                        {item.cutoff_rank?.toLocaleString() || 'N/A'}\n                                                    </span>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <Users className=\"h-4 w-4 text-gray-400 mr-2\" />\n                                                    <span className=\"text-sm text-gray-900 dark:text-white\">\n                                                        {item.seats_available || 0}\n                                                    </span>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CutoffRanks;\n","import React from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport { ThemeProvider } from './context/ThemeContext'\nimport Layout from './components/layout/Layout'\nimport Dashboard from './pages/Dashboard'\nimport Colleges from './pages/Colleges'\nimport Analytics from './pages/Analytics'\nimport MedicalSeats from './pages/MedicalSeats'\nimport CounsellingData from './pages/CounsellingData'\nimport CutoffRanks from './pages/CutoffRanks'\nimport './App.css'\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <div className=\"min-h-screen transition-colors duration-300\">\n        <Routes>\n          {/* Dashboard without Layout - centered design like port 3000 */}\n          <Route path=\"/\" element={<Dashboard />} />\n          \n          {/* Other pages with Layout - keep sidebar for navigation */}\n          <Route path=\"/colleges\" element={\n            <Layout>\n              <Colleges />\n            </Layout>\n          } />\n          <Route path=\"/analytics\" element={\n            <Layout>\n              <Analytics />\n            </Layout>\n          } />\n          <Route path=\"/medical-seats\" element={\n            <Layout>\n              <MedicalSeats />\n            </Layout>\n          } />\n          <Route path=\"/counselling-data\" element={\n            <Layout>\n              <CounsellingData />\n            </Layout>\n          } />\n          <Route path=\"/cutoff-ranks\" element={\n            <Layout>\n              <CutoffRanks />\n            </Layout>\n          } />\n        </Routes>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { BrowserRouter } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport App from './App.jsx'\nimport './index.css'\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n    },\n  },\n})\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </QueryClientProvider>\n  </React.StrictMode>,\n)\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","_extends","target","i","source","key","Action","PopStateEventType","createBrowserHistory","options","createBrowserLocation","window","globalHistory","pathname","search","hash","createLocation","createBrowserHref","to","createPath","getUrlBasedHistory","invariant","value","message","warning","cond","createKey","getHistoryState","location","index","current","state","parsePath","_ref","path","parsedPath","hashIndex","searchIndex","getLocation","createHref","validateLocation","v5Compat","action","listener","getIndex","handlePop","nextIndex","delta","history","push","historyState","url","error","replace","createURL","base","href","fn","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","s","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","normalizePathname","pattern","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","caseSensitive","params","regexpSource","_","v","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","idx","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React.createContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","_temp","relative","useInRouterContext","UNSAFE_invariant","navigator","React.useContext","useResolvedPath","joinedPathname","useLocation","useIsomorphicLayoutEffect","cb","React.useLayoutEffect","useNavigate","isDataRoute","useNavigateStable","useNavigateUnstable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","activeRef","React.useRef","React.useCallback","_temp2","React.useMemo","useRoutes","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","React.createElement","DefaultErrorComponent","useRouteError","stack","preStyles","devInfo","React.Fragment","defaultErrorElement","RenderErrorBoundary","React.Component","props","errorInfo","RenderedRoute","routeContext","children","_dataRouterState","_future","errors","errorIndex","renderFallback","fallbackIndex","loaderData","needsToRunLoader","outlet","shouldRenderHydrateFallback","errorElement","hydrateFallbackElement","warningOnce","getChildren","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","_state$errors","routeId","router","id","alreadyWarned$1","logV6DeprecationWarnings","renderFuture","routerFuture","Route","_props","Router","_ref5","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","React.Children","element","React.isValidElement","treePath","_objectWithoutPropertiesLoose","excluded","sourceKeys","isModifiedEvent","event","shouldProcessLinkClick","_excluded","REACT_ROUTER_VERSION","START_TRANSITION","startTransitionImpl","React","BrowserRouter","_ref4","historyRef","setStateImpl","React.useState","v7_startTransition","setState","newState","React.useEffect","UNSAFE_logV6DeprecationWarnings","isBrowser","ABSOLUTE_URL_REGEX","Link","React.forwardRef","_ref7","ref","onClick","reloadDocument","preventScrollReset","viewTransition","UNSAFE_NavigationContext","absoluteHref","isExternal","currentUrl","targetUrl","internalOnClick","useLinkClickHandler","handleClick","replaceProp","navigate","Subscribable","_proto","_this","callback","x","isServer","noop","functionalUpdate","updater","input","isValidTimeout","ensureQueryKeyArray","timeUntilStale","updatedAt","staleTime","parseQueryArgs","arg1","arg2","arg3","isQueryKey","parseFilterArgs","mapQueryStatusFilter","active","inactive","isActive","matchQuery","filters","query","exact","fetching","predicate","queryKey","stale","hashQueryKeyByOptions","partialMatchKey","queryStatusFilter","matchMutation","mutation","mutationKey","hashQueryKey","hashFn","asArray","stableValueHash","val","isPlainObject","partialDeepEqual","replaceEqualDeep","array","aSize","bItems","bSize","copy","equalItems","shallowEqualObjects","o","hasObjectPrototype","ctor","prot","sleep","timeout","resolve","scheduleMicrotask","getAbortController","FocusManager","_Subscribable","_inheritsLoose","onFocus","_window","_this$cleanup","setup","_this$cleanup2","_this2","focused","focusManager","OnlineManager","onOnline","online","onlineManager","defaultRetryDelay","failureCount","isCancelable","CancelledError","isCancelledError","Retryer","config","cancelRetry","cancelFn","continueFn","promiseResolve","promiseReject","cancelOptions","outerResolve","outerReject","reject","pause","continueResolve","run","promiseOrValue","_config$retry","_config$retryDelay","retry","retryDelay","delay","shouldRetry","NotifyManager","_len","args","_key","_this3","queue","notifyManager","logger","getLogger","setLogger","newLogger","Query","_this$options$cacheTi","_this$options$isDataE","_this$options","prevData","data","setStateOptions","_this$retryer","promise","observer","_this$retryer2","_this$retryer3","fetchOptions","_this$options$behavio","_context$fetchOptions","_abortController$abor","_this$retryer4","abortController","queryFnContext","fetchFn","context","_this$options$behavio2","_context$fetchOptions2","hasInitialData","initialDataUpdatedAt","hasData","_action$meta","_action$dataUpdatedAt","QueryCache","_options$queryHash","queryHash","queryInMap","_parseFilterArgs","_parseFilterArgs2","_this4","_this5","Mutation","getDefaultState","restored","_this$options$retry","reducer","MutationCache","pausedMutations","infiniteQueryBehavior","_context$fetchOptions3","_context$fetchOptions4","_context$state$data","_context$state$data2","refetchPage","fetchMore","pageParam","isFetchingNextPage","isFetchingPreviousPage","oldPages","oldPageParams","abortSignal","newPageParams","cancelled","queryFn","buildNewPages","pages","param","page","previous","fetchPage","manual","queryFnResult","promiseAsAny","getNextPageParam","_manual","_param","getPreviousPageParam","shouldFetchFirstPage","_loop","shouldFetchNextPage","_param2","finalPromise","finalPromiseAsAny","QueryClient","_this$unsubscribeFocu","_this$unsubscribeOnli","_this$queryCache$find","queryKeyOrFilters","parsedOptions","defaultedOptions","_ref2","_this$queryCache$find2","queryCache","_parseFilterArgs3","refetchFilters","_parseFilterArgs4","_parseFilterArgs4$","promises","_ref3","_filters$refetchActiv","_filters$refetchInact","_parseFilterArgs5","_this6","_parseFilterArgs6","_this7","_this$queryDefaults$f","_this$mutationDefault","QueryObserver","shouldFetchOnMount","shouldFetchOn","notifyOptions","prevOptions","prevQuery","mounted","shouldFetchOptionally","nextRefetchInterval","trackedResult","trackProp","unsubscribe","time","_this$options$refetch","nextInterval","prevResult","prevResultState","prevResultOptions","queryChange","queryInitialState","prevQueryResult","dataUpdatedAt","errorUpdatedAt","isFetching","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","selectError","placeholderData","isStale","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","typedKey","changed","isIncluded","isExcluded","defaultNotifyOptions","_this8","shouldLoadOnMount","unstable_batchedUpdates","ReactDOM","defaultContext","QueryClientSharingContext","getQueryClientContext","contextSharing","useQueryClient","queryClient","QueryClientProvider","_ref$contextSharing","Context","createValue","_isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","shouldThrowError","suspense","_useErrorBoundary","useBaseQuery","Observer","mountedRef","_React$useState","forceUpdate","errorResetBoundary","_React$useState2","useQuery","ThemeContext","createContext","useTheme","useContext","ThemeProvider","isDark","setIsDark","useState","saved","useEffect","root","jsx","defaultAttributes","toKebabCase","string","createLucideIcon","iconName","iconNode","Component","forwardRef","color","size","strokeWidth","absoluteStrokeWidth","createElement","tag","attrs","createLucideIcon$1","Activity","AlertCircle","ArrowRight","Award","BarChart3","BookOpen","Building2","Calendar","Database","Eye","Filter","GraduationCap","Hash","Heart","Home","Loader2","MapPin","Menu","Moon","Search","Star","Stethoscope","Sun","Target","TrendingUp","Users","X","Layout","sidebarOpen","setSidebarOpen","toggleTheme","navigation","jsxs","item","Icon","Fragment","Dashboard","stats","setStats","loading","setLoading","setError","searchTerm","setSearchTerm","selectedStream","setSelectedStream","selectedCourse","setSelectedCourse","selectedState","setSelectedState","searchResults","setSearchResults","groupedResults","setGroupedResults","searching","setSearching","showResults","setShowResults","suggestions","setSuggestions","showSuggestions","setShowSuggestions","recentSearches","setRecentSearches","currentPage","setCurrentPage","resultsPerPage","dropdownData","setDropdownData","loadingDropdowns","setLoadingDropdowns","loadingSuggestions","setLoadingSuggestions","fetchStats","err","fetchDropdownData","streamsData","coursesData","statesData","handleSearch","searchQuery","endpoint","newSearch","prev","filtered","handleInputChange","handleSuggestionClick","suggestion","suggestionValue","handleKeyPress","handleQuickFilter","filter","handleStreamChange","stream","totalPages","endIndex","currentResults","goToPage","popularSearches","course","group","total","courseIndex","t","Colleges","setFilters","collegesData","isLoading","handleFilterChange","colleges","pagination","college","Analytics","analytics","trends","trendsLoading","COLORS","analyticsData","trendsData","_e","_f","ResponsiveContainer","PieChart","Pie","_g","name","percent","_h","entry","Cell","Tooltip","BarChart","_i","CartesianGrid","XAxis","YAxis","Bar","_j","_k","LineChart","Line","region","type","count","MedicalSeats","setData","fetchMedicalSeats","queryParams","response","applyFilters","resetFilters","_a","_b","_c","_d","CounsellingData","counsellingTypes","setCounsellingTypes","rounds","setRounds","years","setYears","fetchCounsellingData","fetchMetadata","typesResponse","typesData","roundsResponse","roundsData","currentYear","yearsList","year","round","CutoffRanks","fetchCutoffRanks","App"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]}